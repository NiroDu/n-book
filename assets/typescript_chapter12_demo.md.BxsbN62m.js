import{_ as n,c as a,o as p,ag as l}from"./chunks/framework.D-6U7MZ9.js";const b=JSON.parse('{"title":"引用 ts-axios 库","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/chapter12/demo.md","filePath":"typescript/chapter12/demo.md","lastUpdated":1578475296000}'),e={name:"typescript/chapter12/demo.md"};function o(r,s,c,t,i,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="引用-ts-axios-库" tabindex="-1">引用 ts-axios 库 <a class="header-anchor" href="#引用-ts-axios-库" aria-label="Permalink to &quot;引用 ts-axios 库&quot;">​</a></h1><h2 id="在-ts-项目中引用" tabindex="-1">在 TS 项目中引用 <a class="header-anchor" href="#在-ts-项目中引用" aria-label="Permalink to &quot;在 TS 项目中引用&quot;">​</a></h2><p>我们借助于 <a href="https://cli.vuejs.org/" target="_blank" rel="noreferrer">vue-cli</a> 脚手架创建一个 TypeScript 的 Vue 项目，然后我们把 Vue 官网上一段使用 axios 发请求的 <a href="https://cn.vuejs.org/v2/guide/computed.html#%E4%BE%A6%E5%90%AC%E5%99%A8" target="_blank" rel="noreferrer">demo</a> 代码抄过来。</p><p>我们需要先执行 <code>npm install ts-axios-new</code> 安装 <code>ts-axios</code> 库。</p><p><code>HelloWorld.vue</code></p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">template</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">div</span><span style="color:#DBBC7F;"> class</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;hello&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">    &lt;</span><span style="color:#E69875;">p</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">      Ask a yes/no question:</span></span>
<span class="line"><span style="color:#A7C080;">      &lt;</span><span style="color:#E69875;">input</span><span style="color:#DBBC7F;"> v-model</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;</span><span style="color:#D3C6AA;">question</span><span style="color:#A7C080;">&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">    &lt;/</span><span style="color:#E69875;">p</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">    &lt;</span><span style="color:#E69875;">p</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">{{ answer }}</span><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">p</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;/</span><span style="color:#E69875;">div</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">template</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">script</span><span style="color:#DBBC7F;"> lang</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;ts&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#D699B6;">  import</span><span style="color:#D3C6AA;"> Vue </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;vue&#39;</span></span>
<span class="line"><span style="color:#D699B6;">  import</span><span style="color:#D3C6AA;"> _ </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;lodash&#39;</span></span>
<span class="line"><span style="color:#D699B6;">  import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;ts-axios-new&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">  export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> Vue</span><span style="color:#859289;">.</span><span style="color:#A7C080;">extend</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">    name</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;HelloWorld&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#A7C080;">    data</span><span style="color:#D3C6AA;"> () {</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        question</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        answer</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;I cannot give you an answer until you ask a question!&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    },</span></span>
<span class="line"><span style="color:#A7C080;">    created</span><span style="color:#D3C6AA;"> () {</span></span>
<span class="line"><span style="color:#D699B6;">      this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">debouncedGetAnswer </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> _</span><span style="color:#859289;">.</span><span style="color:#A7C080;">debounce</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">getAnswer, </span><span style="color:#D699B6;">500</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    },</span></span>
<span class="line"><span style="color:#D3C6AA;">    methods</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      debouncedGetAnswer</span><span style="color:#D3C6AA;"> () {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // do nothing</span></span>
<span class="line"><span style="color:#D3C6AA;">      },</span></span>
<span class="line"><span style="color:#A7C080;">      getAnswer</span><span style="color:#D3C6AA;"> () {</span></span>
<span class="line"><span style="color:#E67E80;">        if</span><span style="color:#D3C6AA;"> (</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">question</span><span style="color:#859289;">.</span><span style="color:#A7C080;">indexOf</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;?&#39;</span><span style="color:#D3C6AA;">) </span><span style="color:#E69875;">===</span><span style="color:#E69875;"> -</span><span style="color:#D699B6;">1</span><span style="color:#D3C6AA;">) {</span></span>
<span class="line"><span style="color:#D699B6;">          this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">answer </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;Questions usually contain a question mark. -)&#39;</span></span>
<span class="line"><span style="color:#E67E80;">          return</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D699B6;">        this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">answer </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;Thinking...&#39;</span></span>
<span class="line"><span style="color:#E69875;">        const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">        instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">interceptors</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">use</span><span style="color:#D3C6AA;">((config) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          config</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">params </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">            _t</span><span style="color:#859289;">:</span><span style="color:#E69875;"> +</span><span style="color:#E67E80;">new</span><span style="color:#A7C080;"> Date</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">          }</span></span>
<span class="line"><span style="color:#E67E80;">          return</span><span style="color:#D3C6AA;"> config</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">        instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;https://yesno.wtf/api&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#859289;">          .</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">((response) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">            this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">answer </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> _</span><span style="color:#859289;">.</span><span style="color:#A7C080;">capitalize</span><span style="color:#D3C6AA;">(response</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">answer)</span></span>
<span class="line"><span style="color:#D3C6AA;">          })</span></span>
<span class="line"><span style="color:#859289;">          .</span><span style="color:#A7C080;">catch</span><span style="color:#D3C6AA;">((error) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">            this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">answer </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;Error! Could not reach the API. &#39;</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> error</span></span>
<span class="line"><span style="color:#D3C6AA;">          })</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    },</span></span>
<span class="line"><span style="color:#D3C6AA;">    watch</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      question</span><span style="color:#859289;">:</span><span style="color:#E67E80;"> function</span><span style="color:#D3C6AA;"> (newQuestion</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> oldQuestion</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">        this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">answer</span><span style="color:#E69875;"> =</span><span style="color:#DBBC7F;"> &#39;Waiting for you to stop typing...&#39;</span></span>
<span class="line"><span style="color:#D699B6;">        this</span><span style="color:#859289;">.</span><span style="color:#A7C080;">debouncedGetAnswer</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">script</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">style</span><span style="color:#DBBC7F;"> scoped</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#D699B6;">  h3</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#83C092;">    margin</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> 40</span><span style="color:#E69875;">px</span><span style="color:#A7C080;"> 0 0</span><span style="color:#859289;">;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">  ul</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#83C092;">    list-style-type</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> none</span><span style="color:#859289;">;</span></span>
<span class="line"><span style="color:#83C092;">    padding</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> 0</span><span style="color:#859289;">;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">  li</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#83C092;">    display</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> inline-block</span><span style="color:#859289;">;</span></span>
<span class="line"><span style="color:#83C092;">    margin</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> 0 10</span><span style="color:#E69875;">px</span><span style="color:#859289;">;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">  a</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#83C092;">    color</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> #</span><span style="color:#A7C080;">42b983</span><span style="color:#859289;">;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">style</span><span style="color:#A7C080;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><p>这段代码主要是提供了一个 <code>input</code> 输入框，绑定了 <code>question</code> 变量，当我们输入的时候，会触发 <code>question</code> 的变化，执行 <code>watch question</code> 中的逻辑，执行 <code>this.debouncedGetAnswer</code> 方法，实际上就是 <code>debounce</code> 执行了 <code>getAnswer</code> 方法，发送请求。</p><p>我们通过 <code>import axios from &#39;ts-axios-new&#39; </code> 去加载 <code>ts-axios</code> 库，实际上就是引入了 <code>node_modules/ts-axios-new/dist/axios.es5.js</code>，因为 <code>ts-axios-new</code> 的 <code>package.json</code> 文件中配置的 <code>module</code> 字段是 <code>dist/axios.es5.js</code>，在 <code>webpack</code> 中优先 <code>import</code> 优先会找 <code>module</code> 字段，其次是 <code>main</code> 字段。</p><blockquote><p>小技巧：当我们引入某个库运行时出现问题时候，我们就可以调试 node_modules 中对应引入的代码。</p></blockquote><p>注意我们这里先使用了 <code>axios.create()</code> 方法创建了一个 <code>instance</code>，然后添加了一个请求拦截器，会在每次发送请求前，添加了一个 <code>_t</code> 参数，值为时间戳。然后执行 <code>instance.get</code> 发送一个请求。</p><p>我们可以看到整个 demo 是可以正常运行的，并且没有任何类型相关的问题，说明我们的库打包后的代码和类型声明文件都是没有问题的。</p><h2 id="在-js-项目中引用" tabindex="-1">在 JS 项目中引用 <a class="header-anchor" href="#在-js-项目中引用" aria-label="Permalink to &quot;在 JS 项目中引用&quot;">​</a></h2><p>我们编写的 TS 库仍然可以被纯 JS 的项目引用，这次我们来修改<a href="https://coding.imooc.com/class/74.html" target="_blank" rel="noreferrer">《Vue.js2.5+cube-ui重构饿了么App》</a>课程的代码，把之前对 <code>axios</code> 的引用改成对 <code>ts-axios-new</code> 的引用。课程源码是开源的，所以没购买课程的小伙伴也可以去 <a href="https://github.com/ustbhuangyi/vue-sell" target="_blank" rel="noreferrer">GitHub</a> 下载。</p><p>我们需要先执行 <code>npm install ts-axios-new</code> 安装 <code>ts-axios</code> 库，然后修改代码。</p><p><code>api/helpers.js</code>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;ts-axios-new&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> urlMap </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  development</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  production</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;http://ustbhuangyi.com/sell/&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> baseUrl </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> urlMap[process</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">env</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">NODE_ENV]</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> ERR_OK </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> get</span><span style="color:#D3C6AA;">(url)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#E67E80;"> function</span><span style="color:#D3C6AA;">(params</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {})</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(baseUrl</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> url,</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      params</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">((res)</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> {errno,</span><span style="color:#D3C6AA;"> data}</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> res</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (errno</span><span style="color:#E69875;"> ===</span><span style="color:#D3C6AA;"> ERR_OK)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        return</span><span style="color:#D3C6AA;"> data</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span><span style="color:#859289;">.</span><span style="color:#A7C080;">catch</span><span style="color:#D3C6AA;">((e)</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>只需要把 <code>import axios from &#39;axios&#39;</code> 修改为 <code>import axios from &#39;ts-axios-new&#39;</code> 即可。</p><p>接着运行项目，我们发现项目可以成功运行，因为我们实现了<code>axios</code> 在浏览器端的所有功能，所以可以放心的做替换。</p><p>至此，我们就完成了 <code>ts-axios</code> 库的开发、测试、编译、发布和引用。课程到这里也就告一段落了，下一章我们会对整个课程做总结与展望。</p>`,19)]))}const C=n(e,[["render",o]]);export{b as __pageData,C as default};
