import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const b=JSON.parse('{"title":"处理请求 url 参数","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/chapter4/url.md","filePath":"typescript/chapter4/url.md","lastUpdated":1562065220000}'),e={name:"typescript/chapter4/url.md"};function o(r,s,c,t,y,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="处理请求-url-参数" tabindex="-1">处理请求 url 参数 <a class="header-anchor" href="#处理请求-url-参数" aria-label="Permalink to &quot;处理请求 url 参数&quot;">​</a></h1><h2 id="需求分析" tabindex="-1">需求分析 <a class="header-anchor" href="#需求分析" aria-label="Permalink to &quot;需求分析&quot;">​</a></h2><p>还记得我们上节课遗留了一个问题，再来看这个例子：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    a</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 1</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    b</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 2</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>我们希望最终请求的 <code>url</code> 是 <code>/base/get?a=1&amp;b=2</code>，这样服务端就可以通过请求的 url 解析到我们传来的参数数据了。实际上就是把 <code>params</code> 对象的 key 和 value 拼接到 <code>url</code> 上。</p><p>再来看几个更复杂的例子。</p><h3 id="参数值为数组" tabindex="-1">参数值为数组 <a class="header-anchor" href="#参数值为数组" aria-label="Permalink to &quot;参数值为数组&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&#39;bar&#39;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&#39;baz&#39;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>最终请求的 <code>url</code> 是 <code>/base/get?foo[]=bar&amp;foo[]=baz&#39;</code>。</p><h3 id="参数值为对象" tabindex="-1">参数值为对象 <a class="header-anchor" href="#参数值为对象" aria-label="Permalink to &quot;参数值为对象&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      bar</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;baz&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>最终请求的 <code>url</code> 是 <code>/base/get?foo=%7B%22bar%22:%22baz%22%7D</code>，<code>foo</code> 后面拼接的是 <code>{&quot;bar&quot;:&quot;baz&quot;}</code> encode 后的结果。</p><h3 id="参数值为-date-类型" tabindex="-1">参数值为 Date 类型 <a class="header-anchor" href="#参数值为-date-类型" aria-label="Permalink to &quot;参数值为 Date 类型&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> date </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Date</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    date</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>最终请求的 <code>url</code> 是 <code>/base/get?date=2019-04-01T05:55:39.030Z</code>，<code>date</code> 后面拼接的是 <code>date.toISOString()</code> 的结果。</p><h3 id="特殊字符支持" tabindex="-1">特殊字符支持 <a class="header-anchor" href="#特殊字符支持" aria-label="Permalink to &quot;特殊字符支持&quot;">​</a></h3><p>对于字符 <code>@</code>、<code>:</code>、<code>$</code>、<code>,</code>、<code></code>、<code>[</code>、<code>]</code>，我们是允许出现在 <code>url</code> 中的，不希望被 encode。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;@:$, &#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>最终请求的 <code>url</code> 是 <code>/base/get?foo=@:$+</code>，注意，我们会把空格 <code></code> 转换成 <code>+</code>。</p><h3 id="空值忽略" tabindex="-1">空值忽略 <a class="header-anchor" href="#空值忽略" aria-label="Permalink to &quot;空值忽略&quot;">​</a></h3><p>对于值为 <code>null</code> 或者 <code>undefined</code> 的属性，我们是不会添加到 url 参数中的。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    baz</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> null</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>最终请求的 <code>url</code> 是 <code>/base/get?foo=bar</code>。</p><h3 id="丢弃-url-中的哈希标记" tabindex="-1">丢弃 url 中的哈希标记 <a class="header-anchor" href="#丢弃-url-中的哈希标记" aria-label="Permalink to &quot;丢弃 url 中的哈希标记&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get#hash&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>最终请求的 <code>url</code> 是 <code>/base/get?foo=bar</code></p><h3 id="保留-url-中已存在的参数" tabindex="-1">保留 url 中已存在的参数 <a class="header-anchor" href="#保留-url-中已存在的参数" aria-label="Permalink to &quot;保留 url 中已存在的参数&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get?foo=bar&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    bar</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;baz&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>最终请求的 <code>url</code> 是 <code>/base/get?foo=bar&amp;bar=baz</code></p><h2 id="buildurl-函数实现" tabindex="-1">buildURL 函数实现 <a class="header-anchor" href="#buildurl-函数实现" aria-label="Permalink to &quot;buildURL 函数实现&quot;">​</a></h2><p>根据我们之前的需求分析，我们要实现一个工具函数，把 <code>params</code> 拼接到 <code>url</code> 上。我们希望把项目中的一些工具函数、辅助方法独立管理，于是我们创建一个 <code>helpers</code> 目录，在这个目录下创建 <code>url.ts</code> 文件，未来会把处理 <code>url</code> 相关的工具函数都放在该文件中。</p><p><code>helpers/url.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { isDate, isObject } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;./util&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> encode </span><span style="color:#D3C6AA;">(val</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#A7C080;"> encodeURIComponent</span><span style="color:#D3C6AA;">(val)</span></span>
<span class="line"><span style="color:#859289;">    .</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/%40/</span><span style="color:#E67E80;">g</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;@&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#859289;">    .</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/%3A/</span><span style="color:#E67E80;">gi</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;:&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#859289;">    .</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/%24/</span><span style="color:#E67E80;">g</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;$&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#859289;">    .</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/%2C/</span><span style="color:#E67E80;">gi</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;,&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#859289;">    .</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/%20/</span><span style="color:#E67E80;">g</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;+&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#859289;">    .</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/%5B/</span><span style="color:#E67E80;">gi</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;[&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#859289;">    .</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/%5D/</span><span style="color:#E67E80;">gi</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;]&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> bulidURL </span><span style="color:#D3C6AA;">(url</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> params</span><span style="color:#E69875;">?</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> any</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  if</span><span style="color:#D3C6AA;"> (</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">params)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> url</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> parts</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">[]</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">  Object</span><span style="color:#859289;">.</span><span style="color:#A7C080;">keys</span><span style="color:#D3C6AA;">(params)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">forEach</span><span style="color:#D3C6AA;">((key)</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> val</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> params[key]</span></span>
<span class="line"><span style="color:#E67E80;">    if</span><span style="color:#D3C6AA;"> (val</span><span style="color:#E69875;"> ===</span><span style="color:#D699B6;"> null</span><span style="color:#E69875;"> ||</span><span style="color:#E67E80;"> typeof</span><span style="color:#D3C6AA;"> val</span><span style="color:#E69875;"> ===</span><span style="color:#DBBC7F;"> &#39;undefined&#39;</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      return</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> values</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">[]</span></span>
<span class="line"><span style="color:#E67E80;">    if</span><span style="color:#D3C6AA;"> (Array</span><span style="color:#859289;">.</span><span style="color:#A7C080;">isArray</span><span style="color:#D3C6AA;">(val))</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      values</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> val</span></span>
<span class="line"><span style="color:#D3C6AA;">      key</span><span style="color:#E69875;"> +=</span><span style="color:#DBBC7F;"> &#39;[]&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span><span style="color:#E67E80;"> else</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      values</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> [val]</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">    values</span><span style="color:#859289;">.</span><span style="color:#A7C080;">forEach</span><span style="color:#D3C6AA;">((val)</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (</span><span style="color:#A7C080;">isDate</span><span style="color:#D3C6AA;">(val))</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        val</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> val</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toISOString</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span><span style="color:#E67E80;"> else</span><span style="color:#E67E80;"> if</span><span style="color:#D3C6AA;"> (</span><span style="color:#A7C080;">isObject</span><span style="color:#D3C6AA;">(val))</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        val</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> JSON</span><span style="color:#859289;">.</span><span style="color:#A7C080;">stringify</span><span style="color:#D3C6AA;">(val)</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">      parts</span><span style="color:#859289;">.</span><span style="color:#A7C080;">push</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\`</span><span style="color:#A7C080;">\${</span><span style="color:#A7C080;">encode</span><span style="color:#D3C6AA;">(key)</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">=</span><span style="color:#A7C080;">\${</span><span style="color:#A7C080;">encode</span><span style="color:#D3C6AA;">(val)</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">  let</span><span style="color:#D3C6AA;"> serializedParams</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> parts</span><span style="color:#859289;">.</span><span style="color:#A7C080;">join</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;&amp;&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">  if</span><span style="color:#D3C6AA;"> (serializedParams)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> markIndex</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> url</span><span style="color:#859289;">.</span><span style="color:#A7C080;">indexOf</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;#&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#E67E80;">    if</span><span style="color:#D3C6AA;"> (markIndex</span><span style="color:#E69875;"> !==</span><span style="color:#E69875;"> -</span><span style="color:#D699B6;">1</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      url</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> url</span><span style="color:#859289;">.</span><span style="color:#A7C080;">slice</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> markIndex)</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    url</span><span style="color:#E69875;"> +=</span><span style="color:#D3C6AA;"> (url</span><span style="color:#859289;">.</span><span style="color:#A7C080;">indexOf</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;?&#39;</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;"> ===</span><span style="color:#E69875;"> -</span><span style="color:#D699B6;">1</span><span style="color:#E69875;"> ?</span><span style="color:#DBBC7F;"> &#39;?&#39;</span><span style="color:#E69875;"> :</span><span style="color:#DBBC7F;"> &#39;&amp;&#39;</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> serializedParams</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> url</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><p><code>helpers/util.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> toString </span><span style="color:#E69875;">=</span><span style="color:#7FBBB3;"> Object</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">prototype</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">toString</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> isDate </span><span style="color:#D3C6AA;">(val</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> any</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> val</span><span style="color:#E67E80;"> is</span><span style="color:#83C092;"> Date</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> toString</span><span style="color:#859289;">.</span><span style="color:#A7C080;">call</span><span style="color:#D3C6AA;">(val)</span><span style="color:#E69875;"> ===</span><span style="color:#DBBC7F;"> &#39;[object Date]&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> isObject </span><span style="color:#D3C6AA;">(val</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> any</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> val</span><span style="color:#E67E80;"> is</span><span style="color:#83C092;"> Object</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> val</span><span style="color:#E69875;"> !==</span><span style="color:#D699B6;"> null</span><span style="color:#E69875;"> &amp;&amp;</span><span style="color:#E67E80;"> typeof</span><span style="color:#D3C6AA;"> val</span><span style="color:#E69875;"> ===</span><span style="color:#DBBC7F;"> &#39;object&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="实现-url-参数处理逻辑" tabindex="-1">实现 url 参数处理逻辑 <a class="header-anchor" href="#实现-url-参数处理逻辑" aria-label="Permalink to &quot;实现 url 参数处理逻辑&quot;">​</a></h2><p>我们已经实现了 <code>buildURL</code> 函数，接下来我们来利用它实现 <code>url</code> 参数的处理逻辑。</p><p>在 <code>index.ts</code> 文件中添加如下代码：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> axios </span><span style="color:#D3C6AA;">(config</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosRequestConfig</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> void</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  processConfig</span><span style="color:#D3C6AA;">(config)</span></span>
<span class="line"><span style="color:#A7C080;">  xhr</span><span style="color:#D3C6AA;">(config)</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> processConfig </span><span style="color:#D3C6AA;">(config</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosRequestConfig</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> void</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  config</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">url</span><span style="color:#E69875;"> =</span><span style="color:#A7C080;"> transformUrl</span><span style="color:#D3C6AA;">(config)</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> transformUrl </span><span style="color:#D3C6AA;">(config</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosRequestConfig</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> {</span><span style="color:#D3C6AA;"> url,</span><span style="color:#D3C6AA;"> params</span><span style="color:#D3C6AA;"> }</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> config</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#A7C080;"> bulidURL</span><span style="color:#D3C6AA;">(url,</span><span style="color:#D3C6AA;"> params)</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>在执行 <code>xhr</code> 函数前，我们先执行 <code>processConfig</code> 方法，对 <code>config</code> 中的数据做处理，除了对 <code>url</code> 和 <code>params</code> 处理之外，未来还会处理其它属性。</p><p>在 <code>processConfig</code> 函数内部，我们通过执行 <code>transformUrl</code> 函数修改了 <code>config.url</code>，该函数内部调用了 <code>buildURL</code>。</p><p>那么至此，我们对 <code>url</code> 参数处理逻辑就实现完了，接下来我们就开始编写 demo 了。</p><h2 id="demo-编写" tabindex="-1">demo 编写 <a class="header-anchor" href="#demo-编写" aria-label="Permalink to &quot;demo 编写&quot;">​</a></h2><p>在 <code>examples</code> 目录下创建 <code>base</code> 目录，在 <code>base</code> 目录下创建 <code>index.html</code>:</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">&lt;!</span><span style="color:#E69875;">DOCTYPE</span><span style="color:#DBBC7F;"> html</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">html</span><span style="color:#DBBC7F;"> lang</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;en&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">head</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">    &lt;</span><span style="color:#E69875;">meta</span><span style="color:#DBBC7F;"> charset</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;utf-8&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">    &lt;</span><span style="color:#E69875;">title</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">Base example</span><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">title</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;/</span><span style="color:#E69875;">head</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">body</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">    &lt;</span><span style="color:#E69875;">script</span><span style="color:#DBBC7F;"> src</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;/__build__/base.js&quot;</span><span style="color:#A7C080;">&gt;&lt;/</span><span style="color:#E69875;">script</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;/</span><span style="color:#E69875;">body</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">html</span><span style="color:#A7C080;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>接着创建 <code>app.ts</code> 作为入口文件：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../../src/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&#39;bar&#39;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&#39;baz&#39;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      bar</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;baz&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> date </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Date</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    date</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;@:$, &#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    baz</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> null</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get#hash&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">axios</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  method</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  url</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;/base/get?foo=bar&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  params</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    bar</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;baz&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><p>接着在 <code>server.js</code> 添加新的接口路由：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D3C6AA;">router</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/base/get&#39;</span><span style="color:#D3C6AA;">, </span><span style="color:#E67E80;">function</span><span style="color:#D3C6AA;">(req,</span><span style="color:#D3C6AA;"> res)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  res</span><span style="color:#859289;">.</span><span style="color:#A7C080;">json</span><span style="color:#D3C6AA;">(req</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">query)</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然后在命令行运行 <code>npm run dev</code>，接着打开 chrome 浏览器，访问 <code>http://localhost:8080/</code> 即可访问我们的 demo 了，我们点到 <code>Base</code> 目录下，通过开发者工具的 network 部分我们可以看到成功发送的多条请求，并可以观察它们最终请求的 url，已经如期添加了请求参数。</p><p>那么至此我们的请求 <code>url</code> 参数处理编写完了，下一小节我们会对 <code>request body</code> 数据做处理。</p>`,51)]))}const C=n(e,[["render",o]]);export{b as __pageData,C as default};
