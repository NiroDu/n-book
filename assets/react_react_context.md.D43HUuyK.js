import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const C=JSON.parse('{"title":"React Context 怎么用","description":"","frontmatter":{},"headers":[],"relativePath":"react/react_context.md","filePath":"react/react_context.md","lastUpdated":1557243720000}'),e={name:"react/react_context.md"};function o(t,s,r,c,y,A){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="react-context-怎么用" tabindex="-1">React Context 怎么用 <a class="header-anchor" href="#react-context-怎么用" aria-label="Permalink to &quot;React Context 怎么用&quot;">​</a></h1><h2 id="示例-1-只取值不更改值" tabindex="-1">示例 1 ：只取值不更改值 <a class="header-anchor" href="#示例-1-只取值不更改值" aria-label="Permalink to &quot;示例 1 ：只取值不更改值&quot;">​</a></h2><p>Dynamic Context：</p><p><code>src/themed-context.js</code></p><p>先用<code>React.createContext()</code>创建一个 Context 对象。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#D3C6AA;"> themes </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  light</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foreground</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#000000&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    background</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#eeeeee&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  },</span></span>
<span class="line"><span style="color:#D3C6AA;">  dark</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foreground</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#ffffff&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    background</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#222222&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#D3C6AA;"> ThemeContext </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> React</span><span style="color:#859289;">.</span><span style="color:#A7C080;">createContext</span><span style="color:#D3C6AA;">(themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">dark);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>src/themed-button.js</code></p><p>在声明好类的<code>Class.contextType</code>后，可以从就近父级的 Provider 中使用<code>this.context</code>中取到 context 的值：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React, { Component } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { ThemeContext } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./theme-context&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">class</span><span style="color:#7FBBB3;"> ThemedButton</span><span style="color:#E69875;"> extends</span><span style="color:#7FBBB3;"> Component</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  render</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> props </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">props;</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> theme </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">context;</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> &lt;</span><span style="color:#E69875;">button</span><span style="color:#A7C080;"> {</span><span style="color:#E69875;">...</span><span style="color:#D3C6AA;">props</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;"> style</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">{ backgroundColor</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> theme</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">background }</span><span style="color:#A7C080;">}</span><span style="color:#D3C6AA;"> /&gt;;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#D3C6AA;">ThemedButton</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">contextType </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> ThemeContext;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> ThemedButton;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>src/index.js</code></p><p>下面有两个按钮，一个用 Toolbar 封装，给它提供的值不是默认值。另外一个按钮直接使用默认值。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React, { Component } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> ReactDOM </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react-dom&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { ThemeContext, themes } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./theme-context&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> ThemedButton </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./themed-button&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// An intermediate component that uses the ThemedButton</span></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> Toolbar</span><span style="color:#D3C6AA;">(props)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> &lt;</span><span style="color:#7FBBB3;">ThemedButton</span><span style="color:#DBBC7F;"> onClick</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">props</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">changeTheme</span><span style="color:#A7C080;">}</span><span style="color:#D3C6AA;">&gt;</span><span style="color:#A7C080;">Change Theme</span><span style="color:#D3C6AA;">&lt;/</span><span style="color:#7FBBB3;">ThemedButton</span><span style="color:#D3C6AA;">&gt;;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">class</span><span style="color:#7FBBB3;"> App</span><span style="color:#E69875;"> extends</span><span style="color:#7FBBB3;"> Component</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  constructor</span><span style="color:#D3C6AA;">(props) {</span></span>
<span class="line"><span style="color:#D699B6;">    super</span><span style="color:#D3C6AA;">(props);</span></span>
<span class="line"><span style="color:#D699B6;">    this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">state </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      theme</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">light</span></span>
<span class="line"><span style="color:#D3C6AA;">    };</span></span>
<span class="line"><span style="color:#D699B6;">    this</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toggleTheme</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">      this</span><span style="color:#859289;">.</span><span style="color:#A7C080;">setState</span><span style="color:#D3C6AA;">(state </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> ({</span></span>
<span class="line"><span style="color:#D3C6AA;">        theme</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">theme </span><span style="color:#E69875;">===</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">dark </span><span style="color:#E69875;">?</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">light </span><span style="color:#E69875;">:</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">dark</span></span>
<span class="line"><span style="color:#D3C6AA;">      }));</span></span>
<span class="line"><span style="color:#D3C6AA;">    };</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#A7C080;">  render</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#D3C6AA;">      &lt;</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;</span><span style="color:#7FBBB3;">ThemeContext.Provider</span><span style="color:#DBBC7F;"> value</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">state</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">theme</span><span style="color:#A7C080;">}</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">          {</span><span style="color:#859289;font-style:italic;">/* 这里的 context Provider提供的值是&#39;light&#39;，不是createContext时的&#39;dark&#39;，所以这个按钮就近取值，显示为 light 按钮 */</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#D3C6AA;">          &lt;</span><span style="color:#7FBBB3;">Toolbar</span><span style="color:#DBBC7F;"> changeTheme</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">toggleTheme</span><span style="color:#A7C080;">}</span><span style="color:#D3C6AA;"> /&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;/</span><span style="color:#7FBBB3;">ThemeContext.Provider</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">          {</span><span style="color:#859289;font-style:italic;">/* 这里的context取createContext时的默认值&#39;dark&#39; */</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#D3C6AA;">          &lt;</span><span style="color:#7FBBB3;">ThemedButton</span><span style="color:#D3C6AA;">&gt;normal button&lt;/</span><span style="color:#7FBBB3;">ThemedButton</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;/</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">      &lt;/</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    );</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">ReactDOM</span><span style="color:#859289;">.</span><span style="color:#A7C080;">render</span><span style="color:#D3C6AA;">(&lt;</span><span style="color:#7FBBB3;">App</span><span style="color:#D3C6AA;"> /&gt;, document</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getElementById</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;root&quot;</span><span style="color:#D3C6AA;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="示例-2-从嵌套的组件里去更新-context-的值" tabindex="-1">示例 2 ：从嵌套的组件里去更新 context 的值 <a class="header-anchor" href="#示例-2-从嵌套的组件里去更新-context-的值" aria-label="Permalink to &quot;示例 2 ：从嵌套的组件里去更新 context 的值&quot;">​</a></h2><p>关键是context返回一个函数</p><p><code>src/themed-context.js</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#D3C6AA;"> themes </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  light</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foreground</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#000000&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    background</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#eeeeee&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  },</span></span>
<span class="line"><span style="color:#D3C6AA;">  dark</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    foreground</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#ffffff&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    background</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;#222222&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 原来的：</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// export const ThemeContext = React.createContext(themes.dark);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// Make sure the shape of the default value passed to createContext matches the shape that the consumers expect!</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#D3C6AA;"> ThemeContext </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> React</span><span style="color:#859289;">.</span><span style="color:#A7C080;">createContext</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  theme</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">dark,</span></span>
<span class="line"><span style="color:#A7C080;">  toggleTheme</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {}</span></span>
<span class="line"><span style="color:#D3C6AA;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><code>src/theme-toggler-button.js</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { ThemeContext } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./theme-context&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> ThemeTogglerButton</span><span style="color:#D3C6AA;">()</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // The Theme Toggler Button receives not only the theme</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // but also a toggleTheme function from the context</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#D3C6AA;">    &lt;</span><span style="color:#7FBBB3;">ThemeContext.Consumer</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">      {</span><span style="color:#D3C6AA;">({</span><span style="color:#D3C6AA;"> theme,</span><span style="color:#D3C6AA;"> toggleTheme</span><span style="color:#D3C6AA;"> })</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;</span><span style="color:#E69875;">button</span></span>
<span class="line"><span style="color:#DBBC7F;">          onClick</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">toggleTheme</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#DBBC7F;">          style</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">{</span><span style="color:#D3C6AA;"> backgroundColor</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> theme</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">background</span><span style="color:#D3C6AA;"> }</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#D3C6AA;">        &gt;</span></span>
<span class="line"><span style="color:#A7C080;">          Toggle Theme</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;/</span><span style="color:#E69875;">button</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">      )</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#D3C6AA;">    &lt;/</span><span style="color:#7FBBB3;">ThemeContext.Consumer</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">  );</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> ThemeTogglerButton;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><code>src/index.js</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React, { Component } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> ReactDOM </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react-dom&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { ThemeContext, themes } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./theme-context&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> ThemeTogglerButton </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./theme-toggler-button&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> Content</span><span style="color:#D3C6AA;">()</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#D3C6AA;">    &lt;</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">      &lt;</span><span style="color:#7FBBB3;">ThemeTogglerButton</span><span style="color:#D3C6AA;"> /&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    &lt;/</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">  );</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#E67E80;">class</span><span style="color:#7FBBB3;"> App</span><span style="color:#E69875;"> extends</span><span style="color:#7FBBB3;"> Component</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  constructor</span><span style="color:#D3C6AA;">(props) {</span></span>
<span class="line"><span style="color:#D699B6;">    super</span><span style="color:#D3C6AA;">(props);</span></span>
<span class="line"><span style="color:#D699B6;">    this</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toggleTheme</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">      this</span><span style="color:#859289;">.</span><span style="color:#A7C080;">setState</span><span style="color:#D3C6AA;">(state </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> ({</span></span>
<span class="line"><span style="color:#D3C6AA;">        theme</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">theme </span><span style="color:#E69875;">===</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">dark </span><span style="color:#E69875;">?</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">light </span><span style="color:#E69875;">:</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">dark</span></span>
<span class="line"><span style="color:#D3C6AA;">      }));</span></span>
<span class="line"><span style="color:#D3C6AA;">    };</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // State also contains the updater function so it will</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // be passed down into the context provider</span></span>
<span class="line"><span style="color:#D699B6;">    this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">state </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      theme</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> themes</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">light,</span></span>
<span class="line"><span style="color:#D3C6AA;">      toggleTheme</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">toggleTheme</span></span>
<span class="line"><span style="color:#D3C6AA;">    };</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#A7C080;">  render</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // The entire state is passed to the provider</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#D3C6AA;">      &lt;</span><span style="color:#7FBBB3;">ThemeContext.Provider</span><span style="color:#DBBC7F;"> value</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">state</span><span style="color:#A7C080;">}</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;</span><span style="color:#7FBBB3;">Content</span><span style="color:#D3C6AA;"> /&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">      &lt;/</span><span style="color:#7FBBB3;">ThemeContext.Provider</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    );</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">ReactDOM</span><span style="color:#859289;">.</span><span style="color:#A7C080;">render</span><span style="color:#D3C6AA;">(&lt;</span><span style="color:#7FBBB3;">App</span><span style="color:#D3C6AA;"> /&gt;, document</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getElementById</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;root&quot;</span><span style="color:#D3C6AA;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div>`,20)]))}const b=n(e,[["render",o]]);export{C as __pageData,b as default};
