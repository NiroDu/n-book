import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const e="/n-book/assets/1.ucRThEYO.png",o="/n-book/assets/2.Cg2EvOeh.png",r="/n-book/assets/3.t4c43faM.png",c="/n-book/assets/4.DB3hVFuK.png",D=JSON.parse('{"title":"webpack intermediate 进阶","description":"","frontmatter":{},"headers":[],"relativePath":"webpack/webpack_intermediate.md","filePath":"webpack/webpack_intermediate.md","lastUpdated":1559820936000}'),t={name:"webpack/webpack_intermediate.md"};function i(y,s,A,b,u,C){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="webpack-intermediate-进阶" tabindex="-1">webpack intermediate 进阶 <a class="header-anchor" href="#webpack-intermediate-进阶" aria-label="Permalink to &quot;webpack intermediate 进阶&quot;">​</a></h1><h2 id="打包自定义库" tabindex="-1">打包自定义库 <a class="header-anchor" href="#打包自定义库" aria-label="Permalink to &quot;打包自定义库&quot;">​</a></h2><p>我们准备创建一个自己写的库名为<code>library</code>。</p><h3 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">npm</span><span style="color:#DBBC7F;"> init</span><span style="color:#DBBC7F;"> -y</span></span>
<span class="line"><span style="color:#A7C080;">npm</span><span style="color:#DBBC7F;"> install</span><span style="color:#DBBC7F;"> webpack</span><span style="color:#DBBC7F;"> webpack-cli</span><span style="color:#DBBC7F;"> --save</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>写库的内容：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// src/index.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D699B6;"> *</span><span style="color:#E67E80;"> as</span><span style="color:#D3C6AA;"> math </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./math&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D699B6;"> *</span><span style="color:#E67E80;"> as</span><span style="color:#D3C6AA;"> string </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./string&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> { math, string };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// src/math.js</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> add</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> minus</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> -</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> multiply</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> *</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> division</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> /</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// src/string.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> _ </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;lodash&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> join</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> _</span><span style="color:#859289;">.</span><span style="color:#A7C080;">join</span><span style="color:#D3C6AA;">([a,</span><span style="color:#D3C6AA;"> b],</span><span style="color:#DBBC7F;"> &quot; &quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>假如我们写的库想要别人可以通过以下方式去引入：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// ESmodule</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> library </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;library&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// CommonJS方式</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> library </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;library&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// AMD方式</span></span>
<span class="line"><span style="color:#A7C080;">require</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;library&quot;</span><span style="color:#D3C6AA;">], </span><span style="color:#E67E80;">function</span><span style="color:#D3C6AA;">()</span><span style="color:#D3C6AA;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>可以添加<code>output.libraryTarget</code>为<code>umd</code>(通用模块定义)，这样就可以正确引入该库。</p><p>但是假如想通过<code>&lt;script&gt;</code>标签来使用的话，</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">script</span><span style="color:#DBBC7F;"> src</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;library.js&quot;</span><span style="color:#A7C080;">&gt;&lt;/</span><span style="color:#E69875;">script</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">script</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> math </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> library</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">math;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">script</span><span style="color:#A7C080;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>可以添加<code>output.library</code>为<code>library</code>，这样会在全局变量<code>window</code>下注入一个<code>library</code>对象，内容就是这个库导出的内容。</p><p>我们来看看配置项：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> path </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;path&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  mode</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;production&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  entry</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;./src/index.js&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // 忽略lodash，不要把lodash打包到自己的库中</span></span>
<span class="line"><span style="color:#D3C6AA;">  externals</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;lodash&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  output</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    path</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;dist&quot;</span><span style="color:#D3C6AA;">),</span></span>
<span class="line"><span style="color:#D3C6AA;">    filename</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;library.js&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    library</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;root&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    libraryTarget</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;umd&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>假如设置<code>library: &#39;library&#39;,</code>，<code>libraryTarget: &#39;this&#39;</code>，那 ESmodule、CommonJS、AMD 方式就不可以使用了，在浏览器中访问<code>this.library</code>会访问到<code>library</code>对象。</p><h3 id="发布" tabindex="-1">发布 <a class="header-anchor" href="#发布" aria-label="Permalink to &quot;发布&quot;">​</a></h3><p>做好这个库后，假如想发布到 npm 上，可以去注册 npm 账户，然后修改自己的<code>package.json</code>文件。</p><p>其中<code>main</code>是别人使用你的这个库的时候的入口文件，也就是我打包好后的文件入口。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// package.json</span></span>
<span class="line"><span style="color:#D3C6AA;">{</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">name</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">library-yourname</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">version</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">1.0.0</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">description</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">main</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">./dist/library.js</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">scripts</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">build</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">webpack</span><span style="color:#859289;">&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">keywords</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> []</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">author</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">yourname</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">license</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">MIT</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">dependencies</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">lodash</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">^4.17.11</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">webpack</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">^4.27.1</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">webpack-cli</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">^3.1.2</span><span style="color:#859289;">&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>然后在这个库的目录下添加用户，执行<code>npm publish</code>命令，就会被发布到 npm 仓库上了。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">npm</span><span style="color:#DBBC7F;"> adduser</span></span>
<span class="line"><span style="color:#A7C080;">npm</span><span style="color:#DBBC7F;"> publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="pwa-的打包简单配置" tabindex="-1">PWA 的打包简单配置 <a class="header-anchor" href="#pwa-的打包简单配置" aria-label="Permalink to &quot;PWA 的打包简单配置&quot;">​</a></h2><p>PWA: Progressive Web Apps</p><p>可以利用<a href="https://github.com/GoogleChrome/workbox" target="_blank" rel="noreferrer">workbox-webpack-plugin</a>来实现。</p><p>跟着<a href="https://webpack.js.org/guides/progressive-web-application/" target="_blank" rel="noreferrer">webpack pwa</a>教程配置即可。</p><h2 id="proxy-和-historyapifallback" tabindex="-1">proxy 和 historyApiFallback <a class="header-anchor" href="#proxy-和-historyapifallback" aria-label="Permalink to &quot;proxy 和 historyApiFallback&quot;">​</a></h2><h3 id="proxy" tabindex="-1">Proxy <a class="header-anchor" href="#proxy" aria-label="Permalink to &quot;Proxy&quot;">​</a></h3><p>详细参考：<a href="https://webpack.js.org/configuration/dev-server#devserverproxy" target="_blank" rel="noreferrer">devServer Proxy</a></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  //...</span></span>
<span class="line"><span style="color:#D3C6AA;">  devServer</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    proxy</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#DBBC7F;">      &quot;/react/api&quot;</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 将target代理到localhost</span></span>
<span class="line"><span style="color:#D3C6AA;">        target</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;https://www.dell-lee.com&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 开启https请求</span></span>
<span class="line"><span style="color:#D3C6AA;">        secure</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> false</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // pathRewrite</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 假如请求 https://www.dell-lee.com/react/api/header.json</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 会重写路径为请求 https://www.dell-lee.com/react/api/demo.json 的资源</span></span>
<span class="line"><span style="color:#D3C6AA;">        pathRewrite</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#DBBC7F;">          &quot;header.json&quot;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;demo.json&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">        },</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 设置Origin更变，以绕过服务端的限制</span></span>
<span class="line"><span style="color:#D3C6AA;">        changeOrigin</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> true</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 请求头信息添加</span></span>
<span class="line"><span style="color:#D3C6AA;">        headers</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          host</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;www.dell-lee.com&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">          cookie</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;a=b&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">        },</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 拦截器</span></span>
<span class="line"><span style="color:#A7C080;">        bypass</span><span style="color:#859289;">:</span><span style="color:#E67E80;"> function</span><span style="color:#D3C6AA;">(req,</span><span style="color:#D3C6AA;"> res,</span><span style="color:#D3C6AA;"> proxyOptions)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">          if</span><span style="color:#D3C6AA;"> (req</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">headers</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">accept</span><span style="color:#859289;">.</span><span style="color:#A7C080;">indexOf</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;html&quot;</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;"> !==</span><span style="color:#E69875;"> -</span><span style="color:#D699B6;">1</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">            console</span><span style="color:#859289;">.</span><span style="color:#A7C080;">log</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;Skipping proxy for browser request.&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E67E80;">            return</span><span style="color:#DBBC7F;"> &quot;/index.html&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#D3C6AA;">          }</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p><code>proxy</code>的更多配置项可以查看这里：<a href="https://github.com/chimurai/http-proxy-middleware" target="_blank" rel="noreferrer">http-proxy-middleware</a></p><h3 id="historyapifallback" tabindex="-1">historyApiFallback <a class="header-anchor" href="#historyapifallback" aria-label="Permalink to &quot;historyApiFallback&quot;">​</a></h3><p>详细配置：<a href="https://webpack.js.org/configuration/dev-server#devserverhistoryapifallback" target="_blank" rel="noreferrer">historyApiFallback</a></p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React, { Component } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { BrowserRouter, Route } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react-router-dom&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> ReactDom </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react-dom&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> Home </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./home.js&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> List </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./list.js&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">class</span><span style="color:#7FBBB3;"> App</span><span style="color:#E69875;"> extends</span><span style="color:#7FBBB3;"> Component</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  render</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#A7C080;">      &lt;</span><span style="color:#7FBBB3;">BrowserRouter</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">        &lt;</span><span style="color:#E69875;">div</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">          &lt;</span><span style="color:#7FBBB3;">Route</span><span style="color:#A7C080;"> path</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;/&quot;</span><span style="color:#A7C080;"> exact</span><span style="color:#A7C080;"> component</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">Home</span><span style="color:#A7C080;">}</span><span style="color:#A7C080;"> /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">          &lt;</span><span style="color:#7FBBB3;">Route</span><span style="color:#A7C080;"> path</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;/list&quot;</span><span style="color:#A7C080;"> exact</span><span style="color:#A7C080;"> component</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">List</span><span style="color:#A7C080;">}</span><span style="color:#A7C080;"> /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">        &lt;/</span><span style="color:#E69875;">div</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">      &lt;/</span><span style="color:#7FBBB3;">BrowserRouter</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    );</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">ReactDom</span><span style="color:#859289;">.</span><span style="color:#A7C080;">render</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">&lt;</span><span style="color:#7FBBB3;">App</span><span style="color:#A7C080;"> /&gt;</span><span style="color:#D3C6AA;">, document</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getElementById</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;root&quot;</span><span style="color:#D3C6AA;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>本地开发在做路由跳转的时候，当我们访问<code>localhost:8080/list</code>时，可能返回的是空白页，而不是<code>List</code>组件。</p><p>因为当我们访问<code>localhost:8080/list</code>时，浏览器会默认根目录下有<code>list.html</code>文件，直接去访问<code>list.html</code>文件，所以肯定是返回空白页的。那我们想让单页应用的路由正常访问，需要配置<code>historyApiFallback</code>，这只在本地开发环境有效，线上要支持的话需要服务器支持。（其实这就是<code>history模式</code>，本地假如使用<code>hash模式</code>，路由访问就不会有这种问题）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  //...</span></span>
<span class="line"><span style="color:#D3C6AA;">  devServer</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 默认配置</span></span>
<span class="line"><span style="color:#D3C6AA;">    historyApiFallback</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> true</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 或者自定义重定向跳转</span></span>
<span class="line"><span style="color:#D3C6AA;">    historyApiFallback</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      rewrites</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span></span>
<span class="line"><span style="color:#D3C6AA;">        { from</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /</span><span style="color:#E67E80;">^</span><span style="color:#A7C080;">\\/</span><span style="color:#E67E80;">$</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">, to</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;/views/landing.html&quot;</span><span style="color:#D3C6AA;"> },</span></span>
<span class="line"><span style="color:#D3C6AA;">        { from</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /</span><span style="color:#E67E80;">^</span><span style="color:#A7C080;">\\/</span><span style="color:#DBBC7F;">subpage/</span><span style="color:#D3C6AA;">, to</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;/views/subpage.html&quot;</span><span style="color:#D3C6AA;"> },</span></span>
<span class="line"><span style="color:#D3C6AA;">        { from</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /./</span><span style="color:#D3C6AA;">, to</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;/views/404.html&quot;</span><span style="color:#D3C6AA;"> }</span></span>
<span class="line"><span style="color:#D3C6AA;">        { from</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;/hehe.html&quot;</span><span style="color:#D3C6AA;">, to</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;/views/404.html&quot;</span><span style="color:#D3C6AA;"> }</span></span>
<span class="line"><span style="color:#D3C6AA;">      ]</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>当我们设置了<code>historyApiFallback: true</code>后，访问<code>localhost:8080/list</code>，就会正常显示<code>List</code>组件的内容了。原因是因为设置<code>true</code>后，相当于访问所有地址都从定向到<code>/index.html</code>下，然后再从里头进行路由判断，渲染出对应的组件显示。</p><p>另外，</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">historyApiFallback</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> true</span><span style="color:#D3C6AA;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>等价于</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">historyApiFallback</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#83C092;">  rewrites</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span></span>
<span class="line"><span style="color:#D3C6AA;">    {</span></span>
<span class="line"><span style="color:#D3C6AA;">      from</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /</span><span style="color:#A7C080;">\\.</span><span style="color:#E69875;">*</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">      to</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;/index.html&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  ];</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="eslint" tabindex="-1">ESlint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;ESlint&quot;">​</a></h2><p>安装</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">npm</span><span style="color:#DBBC7F;"> i</span><span style="color:#DBBC7F;"> eslint</span><span style="color:#DBBC7F;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>初始化配置文件，根据问答选择。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">npx</span><span style="color:#DBBC7F;"> eslint</span><span style="color:#DBBC7F;"> --init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>不想写了。。。讨厌 ESlint，去下个<code>eslint-loader</code>。</p><h2 id="通过dll加快打包速度" tabindex="-1">通过DLL加快打包速度 <a class="header-anchor" href="#通过dll加快打包速度" aria-label="Permalink to &quot;通过DLL加快打包速度&quot;">​</a></h2><p>Dynamic-link library，缩写为<code>DLL</code>。</p><p>参考文档：<a href="https://webpack.js.org/plugins/dll-plugin/" target="_blank" rel="noreferrer">dll-plugin</a></p><p>运行<code>npm run build</code>，看看打包时间，关注下几个指标。 <img src="`+e+`" alt="1"></p><p>打包耗时<code>Time: 1296ms</code>，因为我们配置了<code>splitChunks</code>，这会将位于<code>node_modules</code>文件夹下的被引用到的第三方模块都打包到<code>vendors.[contenthash].js</code>文件中，每次执行打包命令都会将这些第三方模板重新分析打包一遍，那我们能否在这里做优化呢？</p><p>当然，第三方模块代码基本不会变动，没有必要每次都打包它们，只需要单独抽离，在第一次打包好后，之后的调用都用第一次打包好的第三方模块文件即可。我们称它们为dll文件。</p><p>例如下面这样的引用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React, { Component } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> ReactDom </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react-dom&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> _ </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;lodash&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">class</span><span style="color:#7FBBB3;"> App</span><span style="color:#E69875;"> extends</span><span style="color:#7FBBB3;"> Component</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  render</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#D3C6AA;">      &lt;</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">        &lt;</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">_</span><span style="color:#859289;">.</span><span style="color:#A7C080;">join</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;This&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;is&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;App&quot;</span><span style="color:#D3C6AA;">], </span><span style="color:#DBBC7F;">&quot; &quot;</span><span style="color:#D3C6AA;">)</span><span style="color:#A7C080;">}</span><span style="color:#D3C6AA;">&lt;/</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">      &lt;/</span><span style="color:#E69875;">div</span><span style="color:#D3C6AA;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    );</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">ReactDom</span><span style="color:#859289;">.</span><span style="color:#A7C080;">render</span><span style="color:#D3C6AA;">(&lt;</span><span style="color:#7FBBB3;">App</span><span style="color:#D3C6AA;"> /&gt;, document</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getElementById</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;root&quot;</span><span style="color:#D3C6AA;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>我们引用了<code>react</code>和<code>react-dom</code>，以及<code>lodash</code>，下面我们来优化对第三方库的打包流程。</p><h3 id="第一步-创建dll" tabindex="-1">第一步 创建dll <a class="header-anchor" href="#第一步-创建dll" aria-label="Permalink to &quot;第一步 创建dll&quot;">​</a></h3><p>首先，创建一个<code>webpack.dll.js</code>文件，把第三方模块单独达到打包到一个dll文件夹下。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.dll.js</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> path </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;path&#39;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">	mode</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;production&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">	entry</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">		vendors</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&#39;lodash&#39;</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;">&#39;react&#39;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&#39;react-dom&#39;</span><span style="color:#D3C6AA;">],</span></span>
<span class="line"><span style="color:#D3C6AA;">	},</span></span>
<span class="line"><span style="color:#D3C6AA;">	output</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 命名、将vendors模块中的模块都打包为一个vendors.dll.js文件</span></span>
<span class="line"><span style="color:#D3C6AA;">    filename</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;[name].dll.js&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 打包到dll文件夹下</span></span>
<span class="line"><span style="color:#D3C6AA;">    path</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll&#39;</span><span style="color:#D3C6AA;">),</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 暴露到全局变量中，</span></span>
<span class="line"><span style="color:#D3C6AA;">		library</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;[name]&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">	}</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>新增一条script打包命令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">&quot;build:dll&quot;</span><span style="color:#DBBC7F;">:</span><span style="color:#A7C080;"> &quot;webpack --config ./build/webpack.dll.js&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>我们做到了把第三方模块抽离出来打包到dll文件夹中，并且集合为一个<code>vendors.dll.js</code>，然后我们需要在生成的html文件引用<code>vendors.dll.js</code>文件。这需要借助插件<code>add-asset-html-webpack-plugin</code>。</p><p><a href="https://www.npmjs.com/package/add-asset-html-webpack-plugin" target="_blank" rel="noreferrer">add-asset-html-webpack-plugin</a> :Add a JavaScript or CSS asset to the HTML generated by <code>html-webpack-plugin</code></p><p>这个插件可以往生成的HTML文件上添加新的静态资源。然后我们来添加这个插件的配置：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.common.js</span></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">...</span></span>
<span class="line"><span style="color:#D3C6AA;">  plugins: [</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#A7C080;"> HtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      template</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;src/index.html&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }),</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#A7C080;"> CleanWebpackPlugin</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;dist&quot;</span><span style="color:#D3C6AA;">], {</span></span>
<span class="line"><span style="color:#D3C6AA;">      root</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../&quot;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    }),</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#A7C080;"> AddAssetHtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      filepath</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../dll/vendors.dll.js&quot;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  ],</span></span>
<span class="line"><span style="color:#E69875;">...</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>npm run build</code>打包，看生成的HTML文件： <img src="`+o+`" alt="2"></p><p>这样就可以在<code>HtmlWebpackPlugin</code>生成的HTML文件基础上，通过<code>AddAssetHtmlWebpackPlugin</code>重新追加将<code>vendors.dll.js</code>也引入HTML文件中。</p><p>但是也能看到，这个文件中不仅是引入了我们打包好的dll文件，还引用了原先在<code>node_modules</code>中的第三方模块生成的vendors，接下来就是要继续配置，使得我们在import<code>react-dom</code>、<code>react</code>、<code>lodash</code>时，直接去使用我们打包好的<code>vendors.dll.js</code>文件，而不是还去<code>node_modules</code>引用。我们可以使用webpack自带的<code>DllReferencePlugin</code>生成映射文件来帮我们解决这个问题。</p><h3 id="第二步-分析manifest" tabindex="-1">第二步 分析manifest <a class="header-anchor" href="#第二步-分析manifest" aria-label="Permalink to &quot;第二步 分析manifest&quot;">​</a></h3><p>下面我们来进行dll文件的配置，添加<code>webpack.DllPlugin</code>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.dll.js</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> path </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;path&#39;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> webpack </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;webpack&#39;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">...</span></span>
<span class="line"><span style="color:#D3C6AA;">	plugins: [</span></span>
<span class="line"><span style="color:#E67E80;">		new</span><span style="color:#D3C6AA;"> webpack</span><span style="color:#859289;">.</span><span style="color:#A7C080;">DllPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // 要分析的模块的名字，也就是我们在library里配置\b暴露在全局中的变量名</span></span>
<span class="line"><span style="color:#D3C6AA;">      name</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;[name]&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // 分析出来的manifest.json映射文件的存放位置</span></span>
<span class="line"><span style="color:#D3C6AA;">			path</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll/[name].manifest.json&#39;</span><span style="color:#D3C6AA;">),</span></span>
<span class="line"><span style="color:#D3C6AA;">		})</span></span>
<span class="line"><span style="color:#D3C6AA;">	]</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>分析出映射关系的<code>manifest.json</code>文件后，要在打包配置中添加<code>webpack.DllReferencePlugin</code>，导入这个<code>manifest.json</code>文件来分析第三方模块的对应关系，从而得知哪些是在dll，哪些是node_modules。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.common.js</span></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">...</span></span>
<span class="line"><span style="color:#D3C6AA;">  plugins: [</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#A7C080;"> HtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      template</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;src/index.html&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }),</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#A7C080;"> CleanWebpackPlugin</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;dist&quot;</span><span style="color:#D3C6AA;">], {</span></span>
<span class="line"><span style="color:#D3C6AA;">      root</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../&quot;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    }),</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#A7C080;"> AddAssetHtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      filepath</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../dll/vendors.dll.js&quot;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    }),</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#D3C6AA;"> webpack</span><span style="color:#859289;">.</span><span style="color:#A7C080;">DllReferencePlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      manifest</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll/vendors.manifest.json&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  ],</span></span>
<span class="line"><span style="color:#E69875;">...</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>现在打包出来的结构目录如下： <img src="`+r+'" alt="3"></p><p>并且我们可以看到这时候只会引入在dll文件夹下的dll文件了。 <img src="'+c+`" alt="4"></p><p>假如还有引入了的，但不在<code>vendors: [&#39;lodash&#39;,&#39;react&#39;, &#39;react-dom&#39;]</code>配置中的第三方模块，依然会从<code>node_modules</code>中引用打包为另一个vendors文件。</p><h3 id="第三步-优化" tabindex="-1">第三步 优化 <a class="header-anchor" href="#第三步-优化" aria-label="Permalink to &quot;第三步 优化&quot;">​</a></h3><p>但这种写法不够灵活，假如我们需要拆分<code>entry</code>为多个模块，那就会产生对应的多个<code>manifest.json文件</code>和<code>dll文件</code>，</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.dll.js</span></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">...</span></span>
<span class="line"><span style="color:#D3C6AA;">  entry: {</span></span>
<span class="line"><span style="color:#D3C6AA;">		vendors</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&#39;lodash&#39;</span><span style="color:#D3C6AA;">],</span></span>
<span class="line"><span style="color:#D3C6AA;">		react</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&#39;react&#39;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&#39;react-dom&#39;</span><span style="color:#D3C6AA;">],</span></span>
<span class="line"><span style="color:#D3C6AA;">		jquery</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&#39;jquery&#39;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">	},</span></span>
<span class="line"><span style="color:#D3C6AA;">	output</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    filename</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;[name].dll.js&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 会生成三个dll文件：lodash.dll.js、react.dll.js、jquery.dll.js</span></span>
<span class="line"><span style="color:#D3C6AA;">    path</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll&#39;</span><span style="color:#D3C6AA;">),</span></span>
<span class="line"><span style="color:#D3C6AA;">		library</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;[name]&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">	},</span></span>
<span class="line"><span style="color:#D3C6AA;">	plugins</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span></span>
<span class="line"><span style="color:#E67E80;">		new</span><span style="color:#D3C6AA;"> webpack</span><span style="color:#859289;">.</span><span style="color:#A7C080;">DllPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      name</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;[name]&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // 会生成 vendors.manifest.json、react.manifest.json、jquery.manifest.json 三个manifest文件</span></span>
<span class="line"><span style="color:#D3C6AA;">			path</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll/[name].manifest.json&#39;</span><span style="color:#D3C6AA;">),</span></span>
<span class="line"><span style="color:#D3C6AA;">		})</span></span>
<span class="line"><span style="color:#D3C6AA;">	]</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>然后我们在plugins里要一遍遍的加入<code>new AddAssetHtmlWebpackPlugin</code>和<code>new webpack.DllReferencePlugin</code>。所以下面需要来进行代码优化。</p><p><strong>思路：</strong></p><p>plugins接收一个数组，我们通过node的<code>fs模块</code>分析dll文件夹下有多少个dll文件，以及多少个manifest文件，再对应的结合<code>new plugin</code>添加到这个数组中。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.common.js</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> path </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;path&#39;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> fs </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;fs&#39;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// plugins中存放基本的Plugin，然后再push新的Plugin</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> plugins </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> [</span></span>
<span class="line"><span style="color:#E67E80;">	new</span><span style="color:#A7C080;"> HtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">		template</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;src/index.html&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">	}), </span></span>
<span class="line"><span style="color:#E67E80;">	new</span><span style="color:#A7C080;"> CleanWebpackPlugin</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&#39;dist&#39;</span><span style="color:#D3C6AA;">], {</span></span>
<span class="line"><span style="color:#D3C6AA;">		root</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">	})</span></span>
<span class="line"><span style="color:#D3C6AA;">];</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> files </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> fs</span><span style="color:#859289;">.</span><span style="color:#A7C080;">readdirSync</span><span style="color:#D3C6AA;">(path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll&#39;</span><span style="color:#D3C6AA;">));</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// file 在我们这个例子中返回的是一个数组：</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// [ &#39;jquery.dll.js&#39;,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">//   &#39;jquery.manifest.json&#39;,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">//   &#39;react.dll.js&#39;,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">//   &#39;react.manifest.json&#39;,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">//   &#39;vendors.dll.js&#39;,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">//   &#39;vendors.manifest.json&#39; ]</span></span>
<span class="line"><span style="color:#D3C6AA;">files</span><span style="color:#859289;">.</span><span style="color:#A7C080;">forEach</span><span style="color:#D3C6AA;">(file </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // 以.dll.js结尾的文件</span></span>
<span class="line"><span style="color:#E67E80;">	if</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/.</span><span style="color:#E69875;">*</span><span style="color:#A7C080;">\\.</span><span style="color:#DBBC7F;">dll.js/</span><span style="color:#859289;">.</span><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(file)) {</span></span>
<span class="line"><span style="color:#D3C6AA;">		plugins</span><span style="color:#859289;">.</span><span style="color:#A7C080;">push</span><span style="color:#D3C6AA;">(</span><span style="color:#E67E80;">new</span><span style="color:#A7C080;"> AddAssetHtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">			filepath</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll&#39;</span><span style="color:#D3C6AA;">, file)</span></span>
<span class="line"><span style="color:#D3C6AA;">		}))</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // 以.manifest.json结尾的文件</span></span>
<span class="line"><span style="color:#E67E80;">	if</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/.</span><span style="color:#E69875;">*</span><span style="color:#A7C080;">\\.</span><span style="color:#DBBC7F;">manifest.json/</span><span style="color:#859289;">.</span><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(file)) {</span></span>
<span class="line"><span style="color:#D3C6AA;">		plugins</span><span style="color:#859289;">.</span><span style="color:#A7C080;">push</span><span style="color:#D3C6AA;">(</span><span style="color:#E67E80;">new</span><span style="color:#D3C6AA;"> webpack</span><span style="color:#859289;">.</span><span style="color:#A7C080;">DllReferencePlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">			manifest</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;../dll&#39;</span><span style="color:#D3C6AA;">, file)</span></span>
<span class="line"><span style="color:#D3C6AA;">		}))</span></span>
<span class="line"><span style="color:#D3C6AA;">	}</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">	...</span></span>
<span class="line"><span style="color:#D3C6AA;">	plugins,</span></span>
<span class="line"><span style="color:#E69875;">	...</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="多入口多页面打包配置" tabindex="-1">多入口多页面打包配置 <a class="header-anchor" href="#多入口多页面打包配置" aria-label="Permalink to &quot;多入口多页面打包配置&quot;">​</a></h2><h3 id="输入输出" tabindex="-1">输入输出 <a class="header-anchor" href="#输入输出" aria-label="Permalink to &quot;输入输出&quot;">​</a></h3><p>实现配置多入口js文件，输出多个出口html文件，并且分别将入口文件打包到对应的出口文件中。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  entry</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    main</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;./src/index.js&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    list</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;./src/list.js&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  },</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>输出多个html文件，无非就是使用多个<code>new HtmlWebpackPlugin()</code>生成对应的html文件。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">plugins</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;">[</span></span>
<span class="line"><span style="color:#E67E80;">  new</span><span style="color:#A7C080;"> HtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">    template</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;src/index.html&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    filename</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;main.html&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    chunks</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&quot;runtime&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;vendors&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;main&quot;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">  }),</span></span>
<span class="line"><span style="color:#E67E80;">  new</span><span style="color:#A7C080;"> HtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">    template</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;src/index.html&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    filename</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;list.html&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    chunks</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&quot;runtime&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;vendors&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;list&quot;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="优化写法" tabindex="-1">优化写法 <a class="header-anchor" href="#优化写法" aria-label="Permalink to &quot;优化写法&quot;">​</a></h3><p>但一遍遍手写<code>new HtmlWebpackPlugin</code>也是不够灵活，我们优化一下代码...</p><p>至此，我们来看一看目前完整的<code>webpack.common.js</code>配置文件：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// webpack.common.js</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> path </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;path&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> fs </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;fs&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> HtmlWebpackPlugin </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;html-webpack-plugin&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> CleanWebpackPlugin </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;clean-webpack-plugin&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> AddAssetHtmlWebpackPlugin </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;add-asset-html-webpack-plugin&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> webpack </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;webpack&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// plugins配置改成一个函数返回生成实例</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> makePlugins</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> configs </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> plugins </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> [</span></span>
<span class="line"><span style="color:#E67E80;">    new</span><span style="color:#A7C080;"> CleanWebpackPlugin</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;dist&quot;</span><span style="color:#D3C6AA;">], {</span></span>
<span class="line"><span style="color:#D3C6AA;">      root</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../&quot;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  ];</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // 遍历entry明确需要生成几份html</span></span>
<span class="line"><span style="color:#D3C6AA;">  Object</span><span style="color:#859289;">.</span><span style="color:#A7C080;">keys</span><span style="color:#D3C6AA;">(configs</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">entry)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">forEach</span><span style="color:#D3C6AA;">(item </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    plugins</span><span style="color:#859289;">.</span><span style="color:#A7C080;">push</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#E67E80;">      new</span><span style="color:#A7C080;"> HtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">        template</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;src/index.html&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        filename</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> \`</span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">item</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">.html\`</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        chunks</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&quot;runtime&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;vendors&quot;</span><span style="color:#D3C6AA;">, item]</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">    );</span></span>
<span class="line"><span style="color:#D3C6AA;">  });</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // 遍历dll文件夹下的所有文件，files是一个数组，里面存放文件名们。</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> files </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> fs</span><span style="color:#859289;">.</span><span style="color:#A7C080;">readdirSync</span><span style="color:#D3C6AA;">(path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../dll&quot;</span><span style="color:#D3C6AA;">));</span></span>
<span class="line"><span style="color:#D3C6AA;">  files</span><span style="color:#859289;">.</span><span style="color:#A7C080;">forEach</span><span style="color:#D3C6AA;">(file </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">    if</span><span style="color:#D3C6AA;"> (</span><span style="color:#DBBC7F;">/.</span><span style="color:#E69875;">*</span><span style="color:#A7C080;">\\.</span><span style="color:#DBBC7F;">dll.js/</span><span style="color:#859289;">.</span><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(file)) {</span></span>
<span class="line"><span style="color:#D3C6AA;">      plugins</span><span style="color:#859289;">.</span><span style="color:#A7C080;">push</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // 往对应的Html上添加新的js文件</span></span>
<span class="line"><span style="color:#E67E80;">        new</span><span style="color:#A7C080;"> AddAssetHtmlWebpackPlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">          filepath</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../dll&quot;</span><span style="color:#D3C6AA;">, file)</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#D3C6AA;">      );</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#E67E80;">    if</span><span style="color:#D3C6AA;"> (</span><span style="color:#DBBC7F;">/.</span><span style="color:#E69875;">*</span><span style="color:#A7C080;">\\.</span><span style="color:#DBBC7F;">manifest.json/</span><span style="color:#859289;">.</span><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(file)) {</span></span>
<span class="line"><span style="color:#D3C6AA;">      plugins</span><span style="color:#859289;">.</span><span style="color:#A7C080;">push</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#E67E80;">        new</span><span style="color:#D3C6AA;"> webpack</span><span style="color:#859289;">.</span><span style="color:#A7C080;">DllReferencePlugin</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">          manifest</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../dll&quot;</span><span style="color:#D3C6AA;">, file)</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#D3C6AA;">      );</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  });</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> plugins;</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> configs </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  entry</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    index</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;./src/index.js&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    list</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;./src/list.js&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    detail</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;./src/detail.js&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  },</span></span>
<span class="line"><span style="color:#D3C6AA;">  resolve</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    extensions</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span><span style="color:#DBBC7F;">&quot;.js&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;.jsx&quot;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">  },</span></span>
<span class="line"><span style="color:#D3C6AA;">  module</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    rules</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span></span>
<span class="line"><span style="color:#D3C6AA;">      {</span></span>
<span class="line"><span style="color:#D3C6AA;">        test</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /</span><span style="color:#A7C080;">\\.</span><span style="color:#DBBC7F;">jsx</span><span style="color:#E69875;">?</span><span style="color:#E67E80;">$</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        include</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../src&quot;</span><span style="color:#D3C6AA;">),</span></span>
<span class="line"><span style="color:#D3C6AA;">        use</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [</span></span>
<span class="line"><span style="color:#D3C6AA;">          {</span></span>
<span class="line"><span style="color:#D3C6AA;">            loader</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;babel-loader&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">          }</span></span>
<span class="line"><span style="color:#D3C6AA;">        ]</span></span>
<span class="line"><span style="color:#D3C6AA;">      },</span></span>
<span class="line"><span style="color:#D3C6AA;">      {</span></span>
<span class="line"><span style="color:#D3C6AA;">        test</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /</span><span style="color:#A7C080;">\\.</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">jpg</span><span style="color:#E69875;">|</span><span style="color:#DBBC7F;">png</span><span style="color:#E69875;">|</span><span style="color:#DBBC7F;">gif</span><span style="color:#D3C6AA;">)</span><span style="color:#E67E80;">$</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        use</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          loader</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;url-loader&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">          options</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">            name</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;[name]_[hash].[ext]&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">            outputPath</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;images/&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">            limit</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 10240</span></span>
<span class="line"><span style="color:#D3C6AA;">          }</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D3C6AA;">      },</span></span>
<span class="line"><span style="color:#D3C6AA;">      {</span></span>
<span class="line"><span style="color:#D3C6AA;">        test</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /</span><span style="color:#A7C080;">\\.</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">eot</span><span style="color:#E69875;">|</span><span style="color:#DBBC7F;">ttf</span><span style="color:#E69875;">|</span><span style="color:#DBBC7F;">svg</span><span style="color:#D3C6AA;">)</span><span style="color:#E67E80;">$</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        use</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          loader</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;file-loader&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    ]</span></span>
<span class="line"><span style="color:#D3C6AA;">  },</span></span>
<span class="line"><span style="color:#D3C6AA;">  optimization</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    runtimeChunk</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      name</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;runtime&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">    },</span></span>
<span class="line"><span style="color:#D3C6AA;">    usedExports</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> true</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">    splitChunks</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      chunks</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;all&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">      cacheGroups</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        vendors</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          test</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> /</span><span style="color:#D3C6AA;">[</span><span style="color:#A7C080;">\\\\</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">]</span><span style="color:#DBBC7F;">node_modules</span><span style="color:#D3C6AA;">[</span><span style="color:#A7C080;">\\\\</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">]</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">          priority</span><span style="color:#859289;">:</span><span style="color:#E69875;"> -</span><span style="color:#D699B6;">10</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">          name</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;vendors&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  },</span></span>
<span class="line"><span style="color:#D3C6AA;">  performance</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> false</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">  output</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    path</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&quot;../dist&quot;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">configs</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">plugins </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> makePlugins</span><span style="color:#D3C6AA;">(configs);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> configs;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br></div></div>`,96)]))}const m=n(t,[["render",i]]);export{D as __pageData,m as default};
