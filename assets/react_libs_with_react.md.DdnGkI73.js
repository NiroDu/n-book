import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const e="/n-book/assets/styled_components.DQeJv_a9.png",o="/n-book/assets/whos_action.B80tFvsu.png",r="/n-book/assets/redux_thunk_1.O8uM-IqZ.png",t="/n-book/assets/redux_thunk_2.BSQocNR0.png",c="/n-book/assets/redux_thunk_3.DSo1p0D2.png",i="/n-book/assets/react_loadable_1.ClY3_YD2.png",y="/n-book/assets/react_loadable_2.MMTQQ6iH.png",A="/n-book/assets/react_loadable_3.C5UWx4k2.png",B=JSON.parse('{"title":"Libs with React","description":"","frontmatter":{},"headers":[],"relativePath":"react/libs_with_react.md","filePath":"react/libs_with_react.md","lastUpdated":1544439154000}'),b={name:"react/libs_with_react.md"};function u(C,s,m,d,D,h){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="libs-with-react" tabindex="-1">Libs with React <a class="header-anchor" href="#libs-with-react" aria-label="Permalink to &quot;Libs with React&quot;">​</a></h1><h2 id="使用-styled-components" tabindex="-1">使用 styled-components <a class="header-anchor" href="#使用-styled-components" aria-label="Permalink to &quot;使用 styled-components&quot;">​</a></h2><p>使用这个第三方工具来写 css，好处是可以组件化。</p><p>文档：<a href="https://github.com/styled-components/styled-components" target="_blank" rel="noreferrer">https://github.com/styled-components/styled-components</a></p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { injectGlobal } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;styled-components&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> styled </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;styled-components&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> logoPic </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;../../statics/logo.png&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 注入全局样式</span></span>
<span class="line"><span style="color:#A7C080;">injectGlobal</span><span style="color:#DBBC7F;">\`</span></span>
<span class="line"><span style="color:#DBBC7F;">    body {</span></span>
<span class="line"><span style="color:#DBBC7F;">        ...</span></span>
<span class="line"><span style="color:#DBBC7F;">    }</span></span>
<span class="line"><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// div标签</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#D3C6AA;"> HeaderWrapper </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> styled</span><span style="color:#859289;">.</span><span style="color:#A7C080;">div</span><span style="color:#DBBC7F;">\`</span></span>
<span class="line"><span style="color:#DBBC7F;">    height: 56px;</span></span>
<span class="line"><span style="color:#DBBC7F;">    .topic-pic {</span></span>
<span class="line"><span style="color:#DBBC7F;">        display: block;</span></span>
<span class="line"><span style="color:#DBBC7F;">    }</span></span>
<span class="line"><span style="color:#DBBC7F;">    &amp;.same-level-HeaderWrapper {</span></span>
<span class="line"><span style="color:#DBBC7F;">      ...</span></span>
<span class="line"><span style="color:#DBBC7F;">    }</span></span>
<span class="line"><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// a 标签上的属性，及引用图片</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#D3C6AA;"> Logo </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> styled</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">a</span><span style="color:#859289;">.</span><span style="color:#A7C080;">attrs</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  href</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;/&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span><span style="color:#DBBC7F;">\`</span></span>
<span class="line"><span style="color:#DBBC7F;">      background: url(</span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">logoPic</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">);</span></span>
<span class="line"><span style="color:#DBBC7F;">      background-size: contain;</span></span>
<span class="line"><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// JSX 中直接使用，也可以额外增加类名</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#7FBBB3;">HeaderWrapper</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">    &lt;</span><span style="color:#7FBBB3;">Logo</span><span style="color:#A7C080;"> className</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;&quot;</span><span style="color:#A7C080;"> /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#7FBBB3;">HeaderWrapper</span><span style="color:#A7C080;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="怎样接收外部变量" tabindex="-1">怎样接收外部变量？ <a class="header-anchor" href="#怎样接收外部变量" aria-label="Permalink to &quot;怎样接收外部变量？&quot;">​</a></h3><p>因为它的本质是一个 StyledComponent 对象组件，从组件外部接收变量，就和正常的 React 一样传递，在 style.js 里用 props 接收：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { RecommendWrapper, RecommendItem } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../style&#39;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">class</span><span style="color:#7FBBB3;"> Recommend</span><span style="color:#E69875;"> extends</span><span style="color:#7FBBB3;"> Component</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  render</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#A7C080;">      &lt;</span><span style="color:#7FBBB3;">RecommendWrapper</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">        {</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">props</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">list</span><span style="color:#859289;">.</span><span style="color:#A7C080;">map</span><span style="color:#D3C6AA;">(item </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">          return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line highlighted"><span style="color:#A7C080;">            &lt;</span><span style="color:#7FBBB3;">RecommendItem</span><span style="color:#A7C080;"> imgUrl</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">item</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">imgAddress</span><span style="color:#A7C080;">}</span><span style="color:#A7C080;"> key</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">item</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">id)</span><span style="color:#A7C080;">}</span><span style="color:#A7C080;"> /&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">          );</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#A7C080;">      &lt;/</span><span style="color:#7FBBB3;">RecommendWrapper</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    );</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> styled </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;styled-components&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#D3C6AA;"> RecommendItem </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> styled</span><span style="color:#859289;">.</span><span style="color:#A7C080;">div</span><span style="color:#DBBC7F;">\`</span></span>
<span class="line"><span style="color:#DBBC7F;">  width: 280px;</span></span>
<span class="line"><span style="color:#DBBC7F;">  height: 50px;</span></span>
<span class="line highlighted"><span style="color:#DBBC7F;">  background: url(</span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">props</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> props</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">imgUrl</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">);</span></span>
<span class="line"><span style="color:#DBBC7F;">  background-size: contain;</span></span>
<span class="line"><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="styledcomponent-对象" tabindex="-1">StyledComponent 对象 <a class="header-anchor" href="#styledcomponent-对象" aria-label="Permalink to &quot;StyledComponent 对象&quot;">​</a></h3><p>一个元素是 styled-components 渲染出来的话，那它是 StyledComponent 对象。</p><p>用 ref 去获取只能获取到 StyledComponent 对象而不是 DOM。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { LoginBox } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./style&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#7FBBB3;">LoginBox</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#7FBBB3;">Input</span></span>
<span class="line"><span style="color:#A7C080;">    placeholder</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;账号&quot;</span></span>
<span class="line highlighted"><span style="color:#A7C080;">    ref</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">input </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">      this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">account </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> input;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#A7C080;">  /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#7FBBB3;">Input</span></span>
<span class="line"><span style="color:#A7C080;">    placeholder</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;密码&quot;</span></span>
<span class="line"><span style="color:#A7C080;">    type</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;password&quot;</span></span>
<span class="line highlighted"><span style="color:#A7C080;">    ref</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">input </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">      this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">password </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> input;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#A7C080;">  /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#7FBBB3;">Button</span><span style="color:#A7C080;"> onClick</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D699B6;"> this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">props</span><span style="color:#859289;">.</span><span style="color:#A7C080;">login</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">account, </span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">password)</span><span style="color:#A7C080;">}&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    登陆</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;/</span><span style="color:#7FBBB3;">Button</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#7FBBB3;">LoginBox</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><img src="`+e+`" alt="图片"></p><p>这时候可以使用 styled-components 提供的 innerRef ，就可以获取到真实 DOM。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { LoginBox } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./style&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#7FBBB3;">LoginBox</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#7FBBB3;">Input</span></span>
<span class="line"><span style="color:#A7C080;">    placeholder</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;账号&quot;</span></span>
<span class="line highlighted"><span style="color:#A7C080;">    innerRef</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">input </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">      this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">account </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> input;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#A7C080;">  /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#7FBBB3;">Input</span></span>
<span class="line"><span style="color:#A7C080;">    placeholder</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;密码&quot;</span></span>
<span class="line"><span style="color:#A7C080;">    type</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;password&quot;</span></span>
<span class="line highlighted"><span style="color:#A7C080;">    innerRef</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">input </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D699B6;">      this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">password </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> input;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#A7C080;">  /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#7FBBB3;">Button</span><span style="color:#A7C080;"> onClick</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D699B6;"> this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">props</span><span style="color:#859289;">.</span><span style="color:#A7C080;">login</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">account, </span><span style="color:#D699B6;">this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">password)</span><span style="color:#A7C080;">}&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    登陆</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;/</span><span style="color:#7FBBB3;">Button</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#7FBBB3;">LoginBox</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="action-归属问题" tabindex="-1">action 归属问题 <a class="header-anchor" href="#action-归属问题" aria-label="Permalink to &quot;action 归属问题&quot;">​</a></h2><p>在 Header 组件里，要执行 Login 组件相关的 action。我们的原则应该是去调用 Login 中的 action，每个组件的 action 只做和自己组件相关的数据处理。</p><p>/src/common/header/index.js <img src="`+o+`" alt="whos_action"></p><h2 id="api-combinereducers" tabindex="-1">API - combineReducers <a class="header-anchor" href="#api-combinereducers" aria-label="Permalink to &quot;API - combineReducers&quot;">​</a></h2><p>当 reducer 的数量越来越多时，逻辑全放在一个 /src/store/reducer.js 里去操作显然不合理，于是要继续拆分：将属于某个组件相关的 reducer 操作，放在这个组件相关的 reducer.js 里去做，全局的 /src/store/reducer.js 只负责组织和管理各个组件的 reducer 操作。</p><p><strong>redux 的 combineReducers 便提供了合并各个组件 reducer 的功能。</strong></p><p>引入了和 Header 组件 以及 Home 组件 相关的 reducer 操作。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/store/reducer.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { combineReducers } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;redux&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { reducer </span><span style="color:#E67E80;">as</span><span style="color:#D3C6AA;"> headerReducer } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;../common/header/store&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { reducer </span><span style="color:#E67E80;">as</span><span style="color:#D3C6AA;"> homeReducer } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;../pages/home/store&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> reducer </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> combineReducers</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  header</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> headerReducer,</span></span>
<span class="line"><span style="color:#D3C6AA;">  home</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> homeReducer</span></span>
<span class="line"><span style="color:#D3C6AA;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> reducer;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>具体的组件中，如 Header 组件，在 store 目录下以 index.js 做一个出口文件。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/common/header/store/index.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> reducer </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./reducer&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D699B6;"> *</span><span style="color:#E67E80;"> as</span><span style="color:#D3C6AA;"> actionCreators </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./actionCreators&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D699B6;"> *</span><span style="color:#E67E80;"> as</span><span style="color:#D3C6AA;"> constants </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./constants&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#D3C6AA;"> { reducer, actionCreators, constants };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>对于跟 header 组件相关的 reducer 操作，放到相关目录的 reducer.js 这里来做。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/common/header/store/reducer.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { SEARCH_FOCUS } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./constants&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> defaultState </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  focused</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> false</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> (state </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> defaultState, action) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  switch</span><span style="color:#D3C6AA;"> (action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">type) {</span></span>
<span class="line"><span style="color:#E69875;">    case</span><span style="color:#D3C6AA;"> SEARCH_FOCUS:</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">        ...</span><span style="color:#D3C6AA;">state,</span></span>
<span class="line"><span style="color:#D3C6AA;">        focused</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">value</span></span>
<span class="line"><span style="color:#D3C6AA;">      };</span></span>
<span class="line"><span style="color:#E69875;">    default</span><span style="color:#D3C6AA;">:</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>在 Header 组件里引用 Store 里的 state 值，便要改成 state.header 。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/common/header/index.js</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> mapStateToProps</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> state </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // focused: state.focused</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">    focused</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">header</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">focused</span></span>
<span class="line"><span style="color:#D3C6AA;">  };</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="关于-combinereducers-合并多个小的-reducer-后-dispatch-的接收问题" tabindex="-1">关于 <strong>combineReducers</strong> 合并多个小的 reducer 后 dispatch 的接收问题？ <a class="header-anchor" href="#关于-combinereducers-合并多个小的-reducer-后-dispatch-的接收问题" aria-label="Permalink to &quot;关于 **combineReducers** 合并多个小的 reducer 后 dispatch 的接收问题？&quot;">​</a></h3><p>dispatch 的时候，不仅是全局大的 reducer 可以接收到 dispatch，小的组件的 reducer 也可以接收到 dispatch，所以可以直接在小的组件的 reducer 里去匹配 action.type，再做逻辑处理。</p><h2 id="immutable" tabindex="-1">Immutable <a class="header-anchor" href="#immutable" aria-label="Permalink to &quot;Immutable&quot;">​</a></h2><h3 id="使用-immutable-js-来管理-store-中的数据" tabindex="-1">使用 Immutable.js 来管理 store 中的数据 <a class="header-anchor" href="#使用-immutable-js-来管理-store-中的数据" aria-label="Permalink to &quot;使用 Immutable.js 来管理 store 中的数据&quot;">​</a></h3><p>为了避免 state 被外部直接更改，facebook 出了这个库，将 JS 转变成 Immutable 对象，以确保没有错误更改了 Store 里的 state 值，如：在 reducer 里直接修改了 state 的值。</p><p>文档：<a href="https://github.com/facebook/immutable-js" target="_blank" rel="noreferrer">https://github.com/facebook/immutable-js</a></p><p>API：</p><p><strong>fromJS</strong> 将 JS 对象转化成一个 Immutable 对象。</p><p><strong>toJS()</strong> 将 Immutable 对象转化成一个 JS 对象。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/common/header/store/reducer.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D699B6;"> *</span><span style="color:#E67E80;"> as</span><span style="color:#D3C6AA;"> constants </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./constants&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line highlighted"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { fromJS } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;immutable&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 将 defaultState 对象转化为一个 Immutable 对象</span></span>
<span class="line highlighted"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> defaultState </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> fromJS</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  focused</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> false</span></span>
<span class="line"><span style="color:#D3C6AA;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> (state </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> defaultState, action) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  switch</span><span style="color:#D3C6AA;"> (action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">type) {</span></span>
<span class="line"><span style="color:#E69875;">    case</span><span style="color:#D3C6AA;"> constants</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">SEARCH_FOCUS:</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // immutable对象的 set 方法，会结合之前immutable对象的值</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // 和设置的值，返回一个全新的对象</span></span>
<span class="line highlighted"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">set</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;focused&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">true</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">    case</span><span style="color:#D3C6AA;"> constants</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">SEARCH_BLUR:</span></span>
<span class="line highlighted"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">set</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;focused&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">false</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">    default</span><span style="color:#D3C6AA;">:</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><strong>用 fromJS 方法将原来只是一个 JS 对象的 defaultState 转变成一个 Immutable 对象，然后下面的 state 因为被转变成 Immutable 对象了。</strong></p><p><strong>所以取值的时候不能再像取 JS 的对象的值一样用 <code>点(.)</code> 去取值，改成 Immutable 中的 <code>set()</code> 方法去设置。</strong></p><p>这个方法实质上也没有直接修改 state 的值，而是结合设置的值后，返回一个新的对象给 Store。</p><p>因为 state.header 已经转变成 Immutable 对象，所以不能用<code>点(.)</code>取值，使用 <code>get()</code> 方法。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/common/header/index.js</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> mapStateToProps</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> state </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 这里的写法很奇怪，先取普通对象state.header的值，再取Immutable对象的值</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">    focused</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">header</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;focused&quot;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  };</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>但是这种写法很奇怪，全局的 state 还是 JS 对象，但是 state.header 是 Immutable 对象，所以我们需要将它们统一，即用 <strong>redux-immutable</strong> 将全局的 state 也变成 Immutable 对象。</p><h3 id="使用-redux-immutable-统一数据格式" tabindex="-1">使用 redux-immutable 统一数据格式 <a class="header-anchor" href="#使用-redux-immutable-统一数据格式" aria-label="Permalink to &quot;使用 redux-immutable 统一数据格式&quot;">​</a></h3><p>文档：<a href="https://github.com/gajus/redux-immutable" target="_blank" rel="noreferrer">https://github.com/gajus/redux-immutable</a></p><p>安装好 redux-immutable 后，将/src/store/reducer.js 原来的：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line highlighted"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { combineReducers } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;redux&quot;</span><span style="color:#D3C6AA;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>改成：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/store/reducer.js</span></span>
<span class="line highlighted"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { combineReducers } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;redux-immutable&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { reducer </span><span style="color:#E67E80;">as</span><span style="color:#D3C6AA;"> headerReducer } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;../common/header/store&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { reducer </span><span style="color:#E67E80;">as</span><span style="color:#D3C6AA;"> homeReducer } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;../pages/home/store&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> reducer </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> combineReducers</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  header</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> headerReducer,</span></span>
<span class="line"><span style="color:#D3C6AA;">  home</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> homeReducer</span></span>
<span class="line"><span style="color:#D3C6AA;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> reducer;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>即引入完成。</p><p>这时候全局的 state 也是 Immutable 对象了，所以可以 get() 直接取值。</p><p>Immutable 对象执行多个 get() 时，可以用 <strong>getIn()</strong> 来简化代码，性能也更好。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> mapStateToProps</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> state </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 以下两种写法是等价的</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">    focused</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;header&quot;</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;focused&quot;</span><span style="color:#D3C6AA;">),</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">    focused</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getIn</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;header&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;focused&quot;</span><span style="color:#D3C6AA;">])</span></span>
<span class="line"><span style="color:#D3C6AA;">  };</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Immutable 对象执行多个 set() 时，可以用 <strong>merge()</strong> 来简化代码，性能也更好。 下面两句是等价的：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// src/common/header/store/reducer.js</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> (state </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> defaultState, action) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  switch</span><span style="color:#D3C6AA;"> (action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">type) {</span></span>
<span class="line"><span style="color:#E69875;">    case</span><span style="color:#D3C6AA;"> constants</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">CHANGE_LIST:</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // 下面两句是等价的：</span></span>
<span class="line highlighted"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">set</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;list&quot;</span><span style="color:#D3C6AA;">, action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">set</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;totalPage&quot;</span><span style="color:#D3C6AA;">, action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">totalPage);</span></span>
<span class="line highlighted"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">merge</span><span style="color:#D3C6AA;">({</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">        list</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data,</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">        totalPage</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">totalPage</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">      });</span></span>
<span class="line"><span style="color:#E69875;">    default</span><span style="color:#D3C6AA;">:</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="immutable-对象的循环展示" tabindex="-1">immutable 对象的循环展示 <a class="header-anchor" href="#immutable-对象的循环展示" aria-label="Permalink to &quot;immutable 对象的循环展示&quot;">​</a></h3><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> React, { Component } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { ListItem, ListInfo, LoadMore } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;../style&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { connect } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;react-redux&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { actionCreators } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;../store&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">class</span><span style="color:#7FBBB3;"> List</span><span style="color:#E69875;"> extends</span><span style="color:#7FBBB3;"> Component</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  render</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 从 Store 里解构赋值</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> { list, getMoreList, page } </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> this</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">props;</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#A7C080;">      &lt;</span><span style="color:#E69875;">div</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">        {</span><span style="color:#D3C6AA;">list</span><span style="color:#859289;">.</span><span style="color:#A7C080;">map</span><span style="color:#D3C6AA;">((item, index) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">          return</span><span style="color:#D3C6AA;"> (</span></span>
<span class="line"><span style="color:#A7C080;">            &lt;</span><span style="color:#7FBBB3;">ListItem</span><span style="color:#A7C080;"> key</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">index</span><span style="color:#A7C080;">}&gt;</span></span>
<span class="line"><span style="color:#A7C080;">              {</span><span style="color:#859289;font-style:italic;">/* item 是 Immutable对象，所以直接 get() 方法从 state 里取值 */</span><span style="color:#A7C080;">}</span></span>
<span class="line highlighted"><span style="color:#A7C080;">              &lt;</span><span style="color:#E69875;">img</span><span style="color:#A7C080;"> alt</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;&quot;</span><span style="color:#A7C080;"> className</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;pic&quot;</span><span style="color:#A7C080;"> src</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">item</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;imgUrl&quot;</span><span style="color:#D3C6AA;">)</span><span style="color:#A7C080;">}</span><span style="color:#A7C080;"> /&gt;</span></span>
<span class="line"><span style="color:#A7C080;">              &lt;</span><span style="color:#7FBBB3;">ListInfo</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#A7C080;">                &lt;</span><span style="color:#E69875;">h3</span><span style="color:#A7C080;"> className</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;title&quot;</span><span style="color:#A7C080;">&gt;{</span><span style="color:#D3C6AA;">item</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;title&quot;</span><span style="color:#D3C6AA;">)</span><span style="color:#A7C080;">}&lt;/</span><span style="color:#E69875;">h3</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#A7C080;">                &lt;</span><span style="color:#E69875;">p</span><span style="color:#A7C080;"> className</span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;">&quot;desc&quot;</span><span style="color:#A7C080;">&gt;{</span><span style="color:#D3C6AA;">item</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;desc&quot;</span><span style="color:#D3C6AA;">)</span><span style="color:#A7C080;">}&lt;/</span><span style="color:#E69875;">p</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">              &lt;/</span><span style="color:#7FBBB3;">ListInfo</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">            &lt;/</span><span style="color:#7FBBB3;">ListItem</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">          );</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span><span style="color:#A7C080;">}</span></span>
<span class="line"><span style="color:#A7C080;">        &lt;</span><span style="color:#7FBBB3;">LoadMore</span><span style="color:#A7C080;"> onClick</span><span style="color:#E69875;">=</span><span style="color:#A7C080;">{</span><span style="color:#D3C6AA;">() </span><span style="color:#E69875;">=&gt;</span><span style="color:#A7C080;"> getMoreList</span><span style="color:#D3C6AA;">(page)</span><span style="color:#A7C080;">}&gt;</span><span style="color:#D3C6AA;">更多文字</span><span style="color:#A7C080;">&lt;/</span><span style="color:#7FBBB3;">LoadMore</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">      &lt;/</span><span style="color:#E69875;">div</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#D3C6AA;">    );</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> mapState</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> state </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> ({</span></span>
<span class="line"><span style="color:#D3C6AA;">  list</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getIn</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;home&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;articleList&quot;</span><span style="color:#D3C6AA;">]),</span></span>
<span class="line"><span style="color:#D3C6AA;">  page</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getIn</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">&quot;home&quot;</span><span style="color:#D3C6AA;">, </span><span style="color:#DBBC7F;">&quot;articlePage&quot;</span><span style="color:#D3C6AA;">])</span></span>
<span class="line"><span style="color:#D3C6AA;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> mapDispatch</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> dispatch </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> ({</span></span>
<span class="line"><span style="color:#A7C080;">  getMoreList</span><span style="color:#D3C6AA;">(page) {</span></span>
<span class="line"><span style="color:#A7C080;">    dispatch</span><span style="color:#D3C6AA;">(actionCreators</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getMoreList</span><span style="color:#D3C6AA;">(page));</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#A7C080;"> connect</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#D3C6AA;">  mapState,</span></span>
<span class="line"><span style="color:#D3C6AA;">  mapDispatch</span></span>
<span class="line"><span style="color:#D3C6AA;">)(List);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="immutable-对象和数组对象" tabindex="-1">immutable 对象和数组对象 <a class="header-anchor" href="#immutable-对象和数组对象" aria-label="Permalink to &quot;immutable 对象和数组对象&quot;">​</a></h3><p>axios 接收到的数据里的数组不是 immutable 对象，但是 state 里的数组对象都已经变成了 immutable 对象，若是需要把数据给 state 里的数组对象，要把数组对象转化为 immutable 对象。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/pages/home/store/actionCreators.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;axios&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D699B6;"> *</span><span style="color:#E67E80;"> as</span><span style="color:#D3C6AA;"> constants </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./constants&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> changHomeData</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> result </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> ({</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">  type</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> constants</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">CHANGE_HOME_DATA,</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">  topicList</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> result</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">topicList,</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">  articleList</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> result</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">articleList,</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">  recommendList</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> result</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">recommendList</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E69875;"> const</span><span style="color:#A7C080;"> getHomeInfo</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> dispatch </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // axios 接收到的数据里的数组不是 immutable 对象</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;/api/home.json&quot;</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(res </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> result </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> res</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data;</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // 所以dispatch给changHomeData的result在 reducer 那边需要转化为 immutable 对象</span></span>
<span class="line highlighted"><span style="color:#A7C080;">      dispatch</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">changHomeData</span><span style="color:#D3C6AA;">(result));</span></span>
<span class="line"><span style="color:#D3C6AA;">    });</span></span>
<span class="line"><span style="color:#D3C6AA;">  };</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>在 merge 的时候，使用 fromJS 将它们转化为 immutable 对象。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// /src/pages/home/store/reducer.js</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D3C6AA;"> { fromJS } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;immutable&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"><span style="color:#83C092;">import</span><span style="color:#D699B6;"> *</span><span style="color:#E67E80;"> as</span><span style="color:#D3C6AA;"> constants </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &quot;./constants&quot;</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> defaultState </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> fromJS</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  topicList</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [],</span></span>
<span class="line"><span style="color:#D3C6AA;">  articleList</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [],</span></span>
<span class="line"><span style="color:#D3C6AA;">  recommendList</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> [],</span></span>
<span class="line"><span style="color:#D3C6AA;">  showScroll</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> false</span></span>
<span class="line"><span style="color:#D3C6AA;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#A7C080;"> changeHomeData</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> (state, action) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">merge</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 接受到的actionCreators传过来的普通对象，转化为 immutable 对象，再去 merge()</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">    topicList</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> fromJS</span><span style="color:#D3C6AA;">(action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">topicList),</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">    articleList</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> fromJS</span><span style="color:#D3C6AA;">(action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">articleList),</span></span>
<span class="line highlighted"><span style="color:#D3C6AA;">    recommendList</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> fromJS</span><span style="color:#D3C6AA;">(action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">recommendList)</span></span>
<span class="line"><span style="color:#D3C6AA;">  });</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">export</span><span style="color:#E67E80;"> default</span><span style="color:#D3C6AA;"> (state </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> defaultState, action) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  switch</span><span style="color:#D3C6AA;"> (action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">type) {</span></span>
<span class="line"><span style="color:#E69875;">    case</span><span style="color:#D3C6AA;"> constants</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">CHANGE_HOME_DATA:</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // 接收到 actionCreators.js dispatch 过来的操作</span></span>
<span class="line highlighted"><span style="color:#E67E80;">      return</span><span style="color:#A7C080;"> changeHomeData</span><span style="color:#D3C6AA;">(state, action);</span></span>
<span class="line"><span style="color:#E69875;">    case</span><span style="color:#D3C6AA;"> constants</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">TOGGLE_SCROLL_TOP:</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state</span><span style="color:#859289;">.</span><span style="color:#A7C080;">set</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;showScroll&quot;</span><span style="color:#D3C6AA;">, action</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">show);</span></span>
<span class="line"><span style="color:#E69875;">    default</span><span style="color:#D3C6AA;">:</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> state;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="redux-thunk-的应用" tabindex="-1">redux-thunk 的应用 <a class="header-anchor" href="#redux-thunk-的应用" aria-label="Permalink to &quot;redux-thunk 的应用&quot;">​</a></h2><p>作为中间件，可以先 dispatch 出一个函数去做 axios 请求数据处理，得到数据后再去 dispatch。</p><p>像这样的形式：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">dispatch</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">Function</span><span style="color:#D3C6AA;">() {</span></span>
<span class="line"><span style="color:#A7C080;">  dispatch</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>/src/pages/home/index.js <img src="`+r+'" alt="图片"></p><p>/src/pages/home/store/actionCreators.js <img src="'+t+'" alt="图片"></p><p>/src/pages/home/store/reducer.js <img src="'+c+'" alt="图片"></p><h2 id="purecomponent" tabindex="-1">PureComponent <a class="header-anchor" href="#purecomponent" aria-label="Permalink to &quot;PureComponent&quot;">​</a></h2><p>当组件都 connect 之后，一旦 state 发生了变化，所有 connect 的组件都会重新渲染，性能低。</p><p>react fiber 中提供了一个 PureComponent ，它在底层实现了自动比对虚拟 DOM 功能，使用它可以让我们不用一个个组件的去写<strong>shouldComponentUpdate</strong>去对比内容的变化，再决定是否更新。用法只需要将 PureComponent 去替换 Component 即可。但是使用这个 PureComponent 最好结合着 Immutable.js 一块使用，不然容易有坑。</p><p>文档：<a href="https://reactjs.org/docs/react-api.html#reactpurecomponent" target="_blank" rel="noreferrer">React - PureComponent</a></p><h2 id="组件分包加载" tabindex="-1">组件分包加载 <a class="header-anchor" href="#组件分包加载" aria-label="Permalink to &quot;组件分包加载&quot;">​</a></h2><p>文档：<a href="https://github.com/jamiebuilds/react-loadable" target="_blank" rel="noreferrer">https://github.com/jamiebuilds/react-loadable</a></p><p>分包加载的结构（这里只分包加载 Detail 组件）： <img src="'+i+'" alt="图片"></p><p>在要分包加载的组件 Detail 组件文件夹里创建 loadable.js <img src="'+y+'" alt="图片"></p><p>然后在路由的地方引入 <img src="'+A+'" alt="图片"></p>',83)]))}const E=n(b,[["render",u]]);export{B as __pageData,E as default};
