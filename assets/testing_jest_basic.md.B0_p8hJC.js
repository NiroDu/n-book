import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const e="/n-book/assets/2020-04-28-18-11-13.R1LG_Mo6.png",u=JSON.parse('{"title":"Jest 基础","description":"","frontmatter":{},"headers":[],"relativePath":"testing/jest_basic.md","filePath":"testing/jest_basic.md","lastUpdated":1589456201000}'),o={name:"testing/jest_basic.md"};function r(t,s,c,i,y,b){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="jest-基础" tabindex="-1">Jest 基础 <a class="header-anchor" href="#jest-基础" aria-label="Permalink to &quot;Jest 基础&quot;">​</a></h1><p><a href="https://jestjs.io/docs/en/getting-started" target="_blank" rel="noreferrer">Jest Docs</a></p><p>下面开始使用Jest来对代码进行测试。</p><p>先是项目中安装Jest：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">yarn</span><span style="color:#DBBC7F;"> add</span><span style="color:#DBBC7F;"> --dev</span><span style="color:#DBBC7F;"> jest</span></span>
<span class="line"><span style="color:#A7C080;">//</span><span style="color:#DBBC7F;"> or</span></span>
<span class="line"><span style="color:#A7C080;">npm</span><span style="color:#DBBC7F;"> install</span><span style="color:#DBBC7F;"> --save-dev</span><span style="color:#DBBC7F;"> jest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="项目一" tabindex="-1">项目一 <a class="header-anchor" href="#项目一" aria-label="Permalink to &quot;项目一&quot;">​</a></h2><p>我们延续加法减法的测试，来引入Jest，简单的使用下它的基础API。</p><p>Jest提供了单元测试（模块测试）和集成测试（多个模块测试）两种方式，依照它的要求，我们先将需要测试的函数以模块的形式导出：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// math.js</span></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> add</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> minus</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> -</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> multi</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> *</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  add,</span></span>
<span class="line"><span style="color:#D3C6AA;">  minus,</span></span>
<span class="line"><span style="color:#D3C6AA;">  multi</span></span>
<span class="line"><span style="color:#D3C6AA;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>在同级目录下，创建<code>math.test.js</code>，作为测试文件。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> math </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&quot;./math.js&quot;</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> { add, minus, multi } </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> math;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// test() 就是 Jest 提供的API，没想到吧哈哈哈</span></span>
<span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;测试加法&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">add</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">7</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">10</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;测试减法&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">minus</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;测试乘法&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">multi</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">9</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>jest命令会自动运行以<code>.test.js</code>结尾的文件。</p></blockquote><p>然后我们就可以通过<code>jest</code>命令来进行自动化测试了，我们可以在<code>package.json</code>中添加脚本命令：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D3C6AA;">{</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">scripts</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">test</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">jest</span><span style="color:#859289;">&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">dependencies</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">jest</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">^24.8.0</span><span style="color:#859289;">&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>运行<code>npm run test</code>： 输出结果： <img src="`+e+`" alt=""></p><p><a href="https://github.com/NiroDu/React-Analysis/tree/master/automatic-testing/2-3%20%E4%BD%BF%E7%94%A8%20Jest%20%E4%BF%AE%E6%94%B9%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A0%B7%E4%BE%8B" target="_blank" rel="noreferrer">参考地址：项目一</a></p><h2 id="项目二" tabindex="-1">项目二 <a class="header-anchor" href="#项目二" aria-label="Permalink to &quot;项目二&quot;">​</a></h2><p>下面我们进行Jest的配置：</p><p>暴露Jest配置文件：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">npx</span><span style="color:#DBBC7F;"> jest</span><span style="color:#DBBC7F;"> --init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这会在根目录生成<code>jest.config.js</code>文件。</p><p>列出测试覆盖率</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">npx</span><span style="color:#DBBC7F;"> jest</span><span style="color:#DBBC7F;"> --coverage</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>也可以直接将这两个命令配置在<code>package.json</code>中：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D3C6AA;">{</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#859289;">  &quot;</span><span style="color:#E69875;">scripts</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">test</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">jest</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">eject</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">jest --init</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;">    &quot;</span><span style="color:#E69875;">coverage</span><span style="color:#859289;">&quot;</span><span style="color:#859289;">:</span><span style="color:#859289;"> &quot;</span><span style="color:#A7C080;">jest --coverage</span><span style="color:#859289;">&quot;</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span><span style="color:#859289;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在<code>jest.config.js</code>文件中可以修改很多配置项，例如：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#83C092;">module</span><span style="color:#859289;">.</span><span style="color:#83C092;">exports</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // The directory where Jest should output its coverage files</span></span>
<span class="line"><span style="color:#D3C6AA;">  coverageDirectory</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &quot;coverage&quot;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">npm</span><span style="color:#DBBC7F;"> i</span><span style="color:#DBBC7F;"> @babel/core@7.4.5</span><span style="color:#DBBC7F;"> @babel/preset-env@7.4.5</span><span style="color:#DBBC7F;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,28)]))}const d=n(o,[["render",r]]);export{u as __pageData,d as default};
