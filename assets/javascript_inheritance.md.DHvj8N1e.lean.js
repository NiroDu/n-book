import{_ as t,c as r,o as n,j as e,a as i}from"./chunks/framework.D-6U7MZ9.js";const f=JSON.parse('{"title":"继承","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/inheritance.md","filePath":"javascript/inheritance.md","lastUpdated":1552905432000}'),s={name:"javascript/inheritance.md"};function c(o,a,l,p,d,h){return n(),r("div",null,a[0]||(a[0]=[e("h1",{id:"继承",tabindex:"-1"},[i("继承 "),e("a",{class:"header-anchor",href:"#继承","aria-label":'Permalink to "继承"'},"​")],-1),e("p",null,"将原型链作为实现继承的主要方法，基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。",-1),e("p",null,"我们来回顾一下构造函数、原型和实例的关系：",-1),e("p",null,"每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。",-1)]))}const _=t(s,[["render",c]]);export{f as __pageData,_ as default};
