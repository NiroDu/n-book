import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const C=JSON.parse('{"title":"上传和下载的进度监控","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/chapter10/upload-download.md","filePath":"typescript/chapter10/upload-download.md","lastUpdated":1562148797000}'),e={name:"typescript/chapter10/upload-download.md"};function o(r,s,c,t,A,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="上传和下载的进度监控" tabindex="-1">上传和下载的进度监控 <a class="header-anchor" href="#上传和下载的进度监控" aria-label="Permalink to &quot;上传和下载的进度监控&quot;">​</a></h1><h2 id="需求分析" tabindex="-1">需求分析 <a class="header-anchor" href="#需求分析" aria-label="Permalink to &quot;需求分析&quot;">​</a></h2><p>有些时候，当我们上传文件或者是请求一个大体积数据的时候，希望知道实时的进度，甚至可以基于此做一个进度条的展示。</p><p>我们希望给 <code>axios</code> 的请求配置提供 <code>onDownloadProgress</code> 和 <code>onUploadProgress</code> 2 个函数属性，用户可以通过这俩函数实现对下载进度和上传进度的监控。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D3C6AA;">axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/more/get&#39;</span><span style="color:#D3C6AA;">,{</span></span>
<span class="line"><span style="color:#A7C080;">  onDownloadProgress</span><span style="color:#D3C6AA;">(progressEvent) {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 监听下载进度</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/more/post&#39;</span><span style="color:#D3C6AA;">,{</span></span>
<span class="line"><span style="color:#A7C080;">  onUploadProgress</span><span style="color:#D3C6AA;">(progressEvent) {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">    // 监听上传进度</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>xhr</code> 对象提供了一个 <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/progress_event" target="_blank" rel="noreferrer"><code>progress</code></a> 事件，我们可以监听此事件对数据的下载进度做监控；另外，<a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/upload" target="_blank" rel="noreferrer"><code>xhr.uplaod</code></a> 对象也提供了 <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/progress_event" target="_blank" rel="noreferrer"><code>progress</code></a> 事件，我们可以基于此对上传进度做监控。</p><h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><p>首先修改一下类型定义。</p><p><code>types/index.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> interface</span><span style="color:#83C092;"> AxiosRequestConfig</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#A7C080;">  onDownloadProgress</span><span style="color:#E69875;">?</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> (e</span><span style="color:#859289;">:</span><span style="color:#83C092;"> ProgressEvent</span><span style="color:#D3C6AA;">) </span><span style="color:#E69875;">=&gt;</span><span style="color:#7FBBB3;"> void</span></span>
<span class="line"><span style="color:#A7C080;">  onUploadProgress</span><span style="color:#E69875;">?</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> (e</span><span style="color:#859289;">:</span><span style="color:#83C092;"> ProgressEvent</span><span style="color:#D3C6AA;">) </span><span style="color:#E69875;">=&gt;</span><span style="color:#7FBBB3;"> void</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>接着在发送请求前，给 <code>xhr</code> 对象添加属性。</p><p><code>core/xhr.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  /*...*/</span></span>
<span class="line"><span style="color:#D3C6AA;">  onDownloadProgress,</span></span>
<span class="line"><span style="color:#D3C6AA;">  onUploadProgress</span></span>
<span class="line"><span style="color:#D3C6AA;">} </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">if</span><span style="color:#D3C6AA;"> (onDownloadProgress) {</span></span>
<span class="line"><span style="color:#D3C6AA;">  request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">onprogress </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> onDownloadProgress</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">if</span><span style="color:#D3C6AA;"> (onUploadProgress) {</span></span>
<span class="line"><span style="color:#D3C6AA;">  request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">upload</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">onprogress </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> onUploadProgress</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>另外，如果请求的数据是 <code>FormData</code> 类型，我们应该主动删除请求 <code>headers</code> 中的 <code>Content-Type</code> 字段，让浏览器自动根据请求数据设置 <code>Content-Type</code>。比如当我们通过 <code>FormData</code> 上传文件的时候，浏览器会把请求 <code>headers</code> 中的 <code>Content-Type</code> 设置为 <code>multipart/form-data</code>。</p><p>我们先添加一个判断 <code>FormData</code> 的方法。</p><p><code>helpers/util.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> isFormData</span><span style="color:#D3C6AA;">(val</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> any</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> boolean</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#E67E80;"> typeof</span><span style="color:#D3C6AA;"> val</span><span style="color:#E69875;"> !==</span><span style="color:#DBBC7F;"> &#39;undefined&#39;</span><span style="color:#E69875;"> &amp;&amp;</span><span style="color:#D3C6AA;"> val</span><span style="color:#E67E80;"> instanceof</span><span style="color:#83C092;"> FormData</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然后再添加相关逻辑。</p><p><code>core/xhr.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E67E80;">if</span><span style="color:#D3C6AA;"> (</span><span style="color:#A7C080;">isFormData</span><span style="color:#D3C6AA;">(data)) {</span></span>
<span class="line"><span style="color:#E67E80;">  delete</span><span style="color:#D3C6AA;"> headers[</span><span style="color:#DBBC7F;">&#39;Content-Type&#39;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>我们发现，<code>xhr</code> 函数内部随着需求越来越多，代码也越来越臃肿，我们可以把逻辑梳理一下，把内部代码做一层封装优化。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> default</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> xhr</span><span style="color:#D3C6AA;">(config</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosRequestConfig</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosPromise</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#E67E80;"> new</span><span style="color:#7FBBB3;"> Promise</span><span style="color:#D3C6AA;">((resolve,</span><span style="color:#D3C6AA;"> reject)</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      data</span><span style="color:#E69875;"> =</span><span style="color:#D699B6;"> null</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">      url,</span></span>
<span class="line"><span style="color:#D3C6AA;">      method</span><span style="color:#E69875;"> =</span><span style="color:#DBBC7F;"> &#39;get&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">      headers,</span></span>
<span class="line"><span style="color:#D3C6AA;">      responseType,</span></span>
<span class="line"><span style="color:#D3C6AA;">      timeout,</span></span>
<span class="line"><span style="color:#D3C6AA;">      cancelToken,</span></span>
<span class="line"><span style="color:#D3C6AA;">      withCredentials,</span></span>
<span class="line"><span style="color:#D3C6AA;">      xsrfCookieName,</span></span>
<span class="line"><span style="color:#D3C6AA;">      xsrfHeaderName,</span></span>
<span class="line"><span style="color:#D3C6AA;">      onDownloadProgress,</span></span>
<span class="line"><span style="color:#D3C6AA;">      onUploadProgress</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> request</span><span style="color:#E69875;"> =</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> XMLHttpRequest</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">open</span><span style="color:#D3C6AA;">(method</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toUpperCase</span><span style="color:#D3C6AA;">(),</span><span style="color:#D3C6AA;"> url</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;"> true</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    configureRequest</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    addEvents</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    processHeaders</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    processCancel</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">send</span><span style="color:#D3C6AA;">(data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    function</span><span style="color:#A7C080;"> configureRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> void</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (responseType)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">responseType</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> responseType</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (timeout)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">timeout</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> timeout</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (withCredentials)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">withCredentials</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> withCredentials</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    function</span><span style="color:#A7C080;"> addEvents</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> void</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">onreadystatechange </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> handleLoad</span><span style="color:#D3C6AA;">()</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        if</span><span style="color:#D3C6AA;"> (request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">readyState</span><span style="color:#E69875;"> !==</span><span style="color:#D699B6;"> 4</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">          return</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">        if</span><span style="color:#D3C6AA;"> (request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">status</span><span style="color:#E69875;"> ===</span><span style="color:#D699B6;"> 0</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">          return</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">        const</span><span style="color:#D3C6AA;"> responseHeaders</span><span style="color:#E69875;"> =</span><span style="color:#A7C080;"> parseHeaders</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getAllResponseHeaders</span><span style="color:#D3C6AA;">())</span></span>
<span class="line"><span style="color:#E69875;">        const</span><span style="color:#D3C6AA;"> responseData</span><span style="color:#E69875;"> =</span></span>
<span class="line"><span style="color:#D3C6AA;">          responseType</span><span style="color:#E69875;"> &amp;&amp;</span><span style="color:#D3C6AA;"> responseType</span><span style="color:#E69875;"> !==</span><span style="color:#DBBC7F;"> &#39;text&#39;</span><span style="color:#E69875;"> ?</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">response</span><span style="color:#E69875;"> :</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">responseText</span></span>
<span class="line"><span style="color:#E69875;">        const</span><span style="color:#D3C6AA;"> response</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosResponse</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          data</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> responseData,</span></span>
<span class="line"><span style="color:#D3C6AA;">          status</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">status,</span></span>
<span class="line"><span style="color:#D3C6AA;">          statusText</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">statusText,</span></span>
<span class="line"><span style="color:#D3C6AA;">          headers</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> responseHeaders,</span></span>
<span class="line"><span style="color:#D3C6AA;">          config,</span></span>
<span class="line"><span style="color:#D3C6AA;">          request</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#A7C080;">        handleResponse</span><span style="color:#D3C6AA;">(response)</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">      request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">onerror </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> handleError</span><span style="color:#D3C6AA;">()</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">        reject</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">createError</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Network Error&#39;</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> config,</span><span style="color:#D699B6;"> null</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> request))</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">      request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">ontimeout </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> handleTimeout</span><span style="color:#D3C6AA;">()</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">        reject</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#A7C080;">          createError</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\`Timeout of </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">config</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">timeout</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;"> ms exceeded\`</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> config,</span><span style="color:#DBBC7F;"> &#39;ECONNABORTED&#39;</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> request)</span></span>
<span class="line"><span style="color:#D3C6AA;">        )</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (onDownloadProgress)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">onprogress</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> onDownloadProgress</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (onUploadProgress)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">upload</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">onprogress</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> onUploadProgress</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    function</span><span style="color:#A7C080;"> processHeaders</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> void</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (</span><span style="color:#A7C080;">isFormData</span><span style="color:#D3C6AA;">(data))</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        delete</span><span style="color:#D3C6AA;"> headers[</span><span style="color:#DBBC7F;">&#39;Content-Type&#39;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> ((withCredentials</span><span style="color:#E69875;"> ||</span><span style="color:#A7C080;"> isURLSameOrigin</span><span style="color:#D3C6AA;">(url</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">))</span><span style="color:#E69875;"> &amp;&amp;</span><span style="color:#D3C6AA;"> xsrfCookieName)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">        const</span><span style="color:#D3C6AA;"> xsrfValue</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> cookie</span><span style="color:#859289;">.</span><span style="color:#A7C080;">read</span><span style="color:#D3C6AA;">(xsrfCookieName)</span></span>
<span class="line"><span style="color:#E67E80;">        if</span><span style="color:#D3C6AA;"> (xsrfValue)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          headers[xsrfHeaderName</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">]</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> xsrfValue</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">      Object</span><span style="color:#859289;">.</span><span style="color:#A7C080;">keys</span><span style="color:#D3C6AA;">(headers)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">forEach</span><span style="color:#D3C6AA;">(name</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        if</span><span style="color:#D3C6AA;"> (data</span><span style="color:#E69875;"> ===</span><span style="color:#D699B6;"> null</span><span style="color:#E69875;"> &amp;&amp;</span><span style="color:#D3C6AA;"> name</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toLowerCase</span><span style="color:#D3C6AA;">()</span><span style="color:#E69875;"> ===</span><span style="color:#DBBC7F;"> &#39;content-type&#39;</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">          delete</span><span style="color:#D3C6AA;"> headers[name]</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span><span style="color:#E67E80;"> else</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">setRequestHeader</span><span style="color:#D3C6AA;">(name,</span><span style="color:#D3C6AA;"> headers[name])</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    function</span><span style="color:#A7C080;"> processCancel</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> void</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (cancelToken)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        cancelToken</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">promise</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(reason</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">abort</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">          reject</span><span style="color:#D3C6AA;">(reason)</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    function</span><span style="color:#A7C080;"> handleResponse</span><span style="color:#D3C6AA;">(response</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosResponse</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> void</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (response</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">status</span><span style="color:#E69875;"> &gt;=</span><span style="color:#D699B6;"> 200</span><span style="color:#E69875;"> &amp;&amp;</span><span style="color:#D3C6AA;"> response</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">status</span><span style="color:#E69875;"> &lt;</span><span style="color:#D699B6;"> 300</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">        resolve</span><span style="color:#D3C6AA;">(response)</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span><span style="color:#E67E80;"> else</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">        reject</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#A7C080;">          createError</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#DBBC7F;">            \`Request failed with status code </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">response</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">status</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">            config,</span></span>
<span class="line"><span style="color:#D699B6;">            null</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">            request,</span></span>
<span class="line"><span style="color:#D3C6AA;">            response</span></span>
<span class="line"><span style="color:#D3C6AA;">          )</span></span>
<span class="line"><span style="color:#D3C6AA;">        )</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br></div></div><p>我们把整个流程分为 7 步：</p><ul><li>创建一个 <code>request</code> 实例。</li><li>执行 <code>request.open</code> 方法初始化。</li><li>执行 <code>configureRequest</code> 配置 <code>request</code> 对象。</li><li>执行 <code>addEvents</code> 给 <code>request</code> 添加事件处理函数。</li><li>执行 <code>processHeaders</code> 处理请求 <code>headers</code>。</li><li>执行 <code>processCancel</code> 处理请求取消逻辑。</li><li>执行 <code>request.send</code> 方法发送请求。</li></ul><p>这样拆分后整个流程就会显得非常清晰，未来我们再去新增需求的时候代码也不会显得越来越臃肿。</p><h2 id="demo-编写" tabindex="-1">demo 编写 <a class="header-anchor" href="#demo-编写" aria-label="Permalink to &quot;demo 编写&quot;">​</a></h2><p>这节课的 demo 非常有意思，我们第一次给界面上增加了一些交互的按钮。</p><p><code>examples/more/index.html</code></p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">&lt;!</span><span style="color:#E69875;">DOCTYPE</span><span style="color:#DBBC7F;"> html</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">html</span><span style="color:#DBBC7F;"> lang</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;en&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">head</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">meta</span><span style="color:#DBBC7F;"> charset</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;utf-8&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">title</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">More example</span><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">title</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">link</span><span style="color:#DBBC7F;"> rel</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;stylesheet&quot;</span><span style="color:#DBBC7F;"> type</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;text/css&quot;</span><span style="color:#DBBC7F;"> href</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;</span><span style="color:#A7C080;">/&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">head</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">body</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">h1</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">file download</span><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">h1</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">div</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">button</span><span style="color:#DBBC7F;"> id</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;download&quot;</span><span style="color:#DBBC7F;"> class</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;btn btn-primary&quot;</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">Download</span><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">button</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">div</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">h1</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">file upload</span><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">h1</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">form</span><span style="color:#DBBC7F;"> role</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;form&quot;</span><span style="color:#DBBC7F;"> class</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;form&quot;</span><span style="color:#DBBC7F;"> onsubmit</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;</span><span style="color:#E67E80;">return</span><span style="color:#D699B6;"> false</span><span style="color:#D3C6AA;">;</span><span style="color:#A7C080;">&quot;</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">input</span><span style="color:#DBBC7F;"> id</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;file&quot;</span><span style="color:#DBBC7F;"> type</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;file&quot;</span><span style="color:#DBBC7F;"> class</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;form-control&quot;</span><span style="color:#A7C080;">/&gt;</span></span>
<span class="line"><span style="color:#A7C080;">  &lt;</span><span style="color:#E69875;">button</span><span style="color:#DBBC7F;"> id</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;upload&quot;</span><span style="color:#DBBC7F;"> type</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;button&quot;</span><span style="color:#DBBC7F;"> class</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;btn btn-primary&quot;</span><span style="color:#A7C080;">&gt;</span><span style="color:#D3C6AA;">Upload</span><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">button</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">form</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">&lt;</span><span style="color:#E69875;">script</span><span style="color:#DBBC7F;"> src</span><span style="color:#A7C080;">=</span><span style="color:#A7C080;">&quot;/__build__/more.js&quot;</span><span style="color:#A7C080;">&gt;&lt;/</span><span style="color:#E69875;">script</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">body</span><span style="color:#A7C080;">&gt;</span></span>
<span class="line"><span style="color:#A7C080;">&lt;/</span><span style="color:#E69875;">html</span><span style="color:#A7C080;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>另外，我们为了友好地展示上传和下载进度，我们引入了一个开源库 <a href="https://github.com/rstacruz/nprogress" target="_blank" rel="noreferrer">nprogress</a>，它可以在页面的顶部展示进度条。</p><p><code>examples/more/app.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> calculatePercentage</span><span style="color:#D3C6AA;">(loaded</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> number</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> total</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> number</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> Math</span><span style="color:#859289;">.</span><span style="color:#A7C080;">floor</span><span style="color:#D3C6AA;">(loaded</span><span style="color:#E69875;"> *</span><span style="color:#D699B6;"> 1</span><span style="color:#D3C6AA;">.</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;"> /</span><span style="color:#D3C6AA;"> total</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> loadProgressBar</span><span style="color:#D3C6AA;">()</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#A7C080;"> setupStartProgress </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> ()</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">interceptors</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">use</span><span style="color:#D3C6AA;">(config</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      NProgress</span><span style="color:#859289;">.</span><span style="color:#A7C080;">start</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> config</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#A7C080;"> setupUpdateProgress </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> ()</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#A7C080;"> update </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> (e</span><span style="color:#859289;">:</span><span style="color:#83C092;"> ProgressEvent</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      console</span><span style="color:#859289;">.</span><span style="color:#A7C080;">log</span><span style="color:#D3C6AA;">(e)</span></span>
<span class="line"><span style="color:#D3C6AA;">      NProgress</span><span style="color:#859289;">.</span><span style="color:#A7C080;">set</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">calculatePercentage</span><span style="color:#D3C6AA;">(e</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">loaded,</span><span style="color:#D3C6AA;"> e</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">total))</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">onDownloadProgress</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> update</span></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">onUploadProgress</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> update</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#A7C080;"> setupStopProgress </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> ()</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">interceptors</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">response</span><span style="color:#859289;">.</span><span style="color:#A7C080;">use</span><span style="color:#D3C6AA;">(response</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      NProgress</span><span style="color:#859289;">.</span><span style="color:#A7C080;">done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> response</span></span>
<span class="line"><span style="color:#D3C6AA;">    },</span><span style="color:#D3C6AA;"> error</span><span style="color:#E69875;"> =&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      NProgress</span><span style="color:#859289;">.</span><span style="color:#A7C080;">done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#7FBBB3;"> Promise</span><span style="color:#859289;">.</span><span style="color:#A7C080;">reject</span><span style="color:#D3C6AA;">(error)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  setupStartProgress</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">  setupUpdateProgress</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">  setupStopProgress</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">loadProgressBar</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> downloadEl </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> document</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getElementById</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;download&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">downloadEl</span><span style="color:#E69875;">!</span><span style="color:#859289;">.</span><span style="color:#A7C080;">addEventListener</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;click&#39;</span><span style="color:#D3C6AA;">, e </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;https://img.mukewang.com/5cc01a7b0001a33718720632.jpg&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> uploadEl </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> document</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getElementById</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;upload&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">uploadEl</span><span style="color:#E69875;">!</span><span style="color:#859289;">.</span><span style="color:#A7C080;">addEventListener</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;click&#39;</span><span style="color:#D3C6AA;">, e </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> data </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> FormData</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> fileEl </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> document</span><span style="color:#859289;">.</span><span style="color:#A7C080;">getElementById</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;file&#39;</span><span style="color:#D3C6AA;">) </span><span style="color:#E67E80;">as</span><span style="color:#83C092;"> HTMLInputElement</span></span>
<span class="line"><span style="color:#E67E80;">  if</span><span style="color:#D3C6AA;"> (fileEl</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">files) {</span></span>
<span class="line"><span style="color:#D3C6AA;">    data</span><span style="color:#859289;">.</span><span style="color:#A7C080;">append</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;file&#39;</span><span style="color:#D3C6AA;">, fileEl</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">files[</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/more/upload&#39;</span><span style="color:#D3C6AA;">, data)</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><p>对于 <code>progress</code> 事件参数 <code>e</code>，会有 <code>e.total</code> 和 <code>e.loaded</code> 属性，表示进程总体的工作量和已经执行的工作量，我们可以根据这 2 个值算出当前进度，然后通过 <code>Nprogess.set</code> 设置。另外，我们通过配置请求拦截器和响应拦截器执行 <code>NProgress.start()</code> 和 <code>NProgress.done()</code>。</p><p>我们给下载按钮绑定了一个 <code>click</code> 事件，请求一张图片，我们可以看到实时的进度；另外我们也给上传按钮绑定了一个 <code>click</code> 事件，上传我们选择的文件，同样也能看到实时进度。</p><p>在服务端，我们为了处理上传请求，需要下载安装一个 <code>express</code> 的中间件 <code>connect-multiparty</code>，然后使用它。</p><p><code>example/server.js</code>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> multipart </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> require</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;connect-multiparty&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">app</span><span style="color:#859289;">.</span><span style="color:#A7C080;">use</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">multipart</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  uploadDir</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> path</span><span style="color:#859289;">.</span><span style="color:#A7C080;">resolve</span><span style="color:#D3C6AA;">(__dirname, </span><span style="color:#DBBC7F;">&#39;upload-file&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">router</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/more/upload&#39;</span><span style="color:#D3C6AA;">, </span><span style="color:#E67E80;">function</span><span style="color:#D3C6AA;">(req,</span><span style="color:#D3C6AA;"> res)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">  console</span><span style="color:#859289;">.</span><span style="color:#A7C080;">log</span><span style="color:#D3C6AA;">(req</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">body,</span><span style="color:#D3C6AA;"> req</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">files)</span></span>
<span class="line"><span style="color:#D3C6AA;">  res</span><span style="color:#859289;">.</span><span style="color:#A7C080;">end</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;upload success!&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这里我们需要在 <code>examples</code> 目录下创建一个 <code>upload-file</code> 的空目录，用于存放上传的文件。</p><p>通过这个中间件，我们就可以处理上传请求并且可以把上传的文件存储在 <code>upload-file</code> 目录下。</p><p>为了保证代码正常运行，我们还需要在 <code>examples/webpack.config.js</code> 中添加 <code>css-loader</code> 和 <code>css-loader</code>，不要忘记先安装它们。</p><p>至此，<code>ts-axios</code> 支持了上传下载进度事件的回调函数的配置，用户可以通过配置这俩函数实现对下载进度和上传进度的监控。下一节课我们来实现 http 的认证授权功能。</p>`,41)]))}const b=n(e,[["render",o]]);export{C as __pageData,b as default};
