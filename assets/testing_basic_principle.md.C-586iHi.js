import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const C=JSON.parse('{"title":"自动化测试基本原理","description":"","frontmatter":{},"headers":[],"relativePath":"testing/basic_principle.md","filePath":"testing/basic_principle.md","lastUpdated":1589456201000}'),e={name:"testing/basic_principle.md"};function o(r,s,c,t,A,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="自动化测试基本原理" tabindex="-1">自动化测试基本原理 <a class="header-anchor" href="#自动化测试基本原理" aria-label="Permalink to &quot;自动化测试基本原理&quot;">​</a></h1><p>例如想测试下面这两个函数：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// 可先打开控制台全局注入这两个函数</span></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> add</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> minus</span><span style="color:#D3C6AA;">(a,</span><span style="color:#D3C6AA;"> b)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // 错误的，需要被测出来</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> a</span><span style="color:#E69875;"> *</span><span style="color:#D3C6AA;"> b;</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="做法一" tabindex="-1">做法一 <a class="header-anchor" href="#做法一" aria-label="Permalink to &quot;做法一&quot;">​</a></h2><p>最直白的做法可将下面这段测试代码直接运行：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// 运算的结果</span></span>
<span class="line"><span style="color:#E69875;">var</span><span style="color:#D3C6AA;"> result </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> add</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">7</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 期望的值</span></span>
<span class="line"><span style="color:#E69875;">var</span><span style="color:#D3C6AA;"> expect </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> 10</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">if</span><span style="color:#D3C6AA;"> (result </span><span style="color:#E69875;">!==</span><span style="color:#D699B6;"> 10</span><span style="color:#D3C6AA;">) {</span></span>
<span class="line"><span style="color:#E67E80;">  throw</span><span style="color:#A7C080;"> Error</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\`3 + 7 应该等于 </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">expect</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">，但结果却是 </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">result</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 再一次运算</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 运算的结果</span></span>
<span class="line"><span style="color:#E69875;">var</span><span style="color:#D3C6AA;"> result </span><span style="color:#E69875;">=</span><span style="color:#A7C080;"> minus</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 期望的值</span></span>
<span class="line"><span style="color:#E69875;">var</span><span style="color:#D3C6AA;"> expect </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> 0</span><span style="color:#D3C6AA;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">if</span><span style="color:#D3C6AA;"> (result </span><span style="color:#E69875;">!==</span><span style="color:#D699B6;"> 0</span><span style="color:#D3C6AA;">) {</span></span>
<span class="line highlighted"><span style="color:#E67E80;">  throw</span><span style="color:#A7C080;"> Error</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\` 3 - 3 应该等于 </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">expect</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">，但结果却是 </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">result</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>运行后可见，在运行<code>minus(3, 3)</code>时，会在控制台输出：<code>3 - 3 应该等于 0，但结果却是 9</code>，这就是最基础的测试代码。</p><h2 id="做法二" tabindex="-1">做法二 <a class="header-anchor" href="#做法二" aria-label="Permalink to &quot;做法二&quot;">​</a></h2><p>我们来改进上诉的做法，期望写这样的函数去调用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">add</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">6</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#A7C080;">expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">minus</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">6</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859289;font-style:italic;">// 同样在浏览器控制台中运行即可</span></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> expect</span><span style="color:#D3C6AA;">(result)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    toBe</span><span style="color:#859289;">:</span><span style="color:#E67E80;"> function</span><span style="color:#D3C6AA;"> (actual)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (result</span><span style="color:#E69875;"> !==</span><span style="color:#D3C6AA;"> actual)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        throw</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Error</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\`预期值和实际值不相等，预期</span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">actual</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">，结果却是 </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">result</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    },</span></span>
<span class="line"><span style="color:#D3C6AA;">  };</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#A7C080;">expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">add</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">7</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">10</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#A7C080;">expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">minus</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="做法三" tabindex="-1">做法三 <a class="header-anchor" href="#做法三" aria-label="Permalink to &quot;做法三&quot;">​</a></h2><p>但是报错我们不知道是哪个有问题，所以继续改进函数调用做法。</p><p>期望写成这样的函数去调用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;测试加法&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">add</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">7</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">10</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;测试减法&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">minus</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在外面封装一层：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> test</span><span style="color:#D3C6AA;">(desc,</span><span style="color:#D3C6AA;"> fn)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  try</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    fn</span><span style="color:#D3C6AA;">();</span></span>
<span class="line"><span style="color:#D3C6AA;">    console</span><span style="color:#859289;">.</span><span style="color:#A7C080;">log</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\`</span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">desc</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;"> 通过测试\`</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span><span style="color:#E67E80;"> catch</span><span style="color:#D3C6AA;"> (e)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    console</span><span style="color:#859289;">.</span><span style="color:#A7C080;">error</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\`</span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">desc</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;"> 没有通过测试 </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">e</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 上一段一样的代码</span></span>
<span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> expect</span><span style="color:#D3C6AA;">(result)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    toBe</span><span style="color:#859289;">:</span><span style="color:#E67E80;"> function</span><span style="color:#D3C6AA;"> (actual)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">      if</span><span style="color:#D3C6AA;"> (result</span><span style="color:#E69875;"> !==</span><span style="color:#D3C6AA;"> actual)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        throw</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Error</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">\`预期值和实际值不相等，预期</span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">actual</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">，结果却是 </span><span style="color:#A7C080;">\${</span><span style="color:#D3C6AA;">result</span><span style="color:#A7C080;">}</span><span style="color:#DBBC7F;">\`</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    },</span></span>
<span class="line"><span style="color:#D3C6AA;">  };</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859289;font-style:italic;">// 运行函数</span></span>
<span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;测试加法&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">add</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">7</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">10</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;测试减法&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">minus</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">,</span><span style="color:#D699B6;">3</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">);</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>打开控制台运行，即可看见测试结果中的报错信息。</p>`,18)]))}const D=n(e,[["render",o]]);export{C as __pageData,D as default};
