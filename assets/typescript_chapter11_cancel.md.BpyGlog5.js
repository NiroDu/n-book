import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D-6U7MZ9.js";const i=JSON.parse('{"title":"请求取消模块单元测试","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/chapter11/cancel.md","filePath":"typescript/chapter11/cancel.md","lastUpdated":1578475296000}'),e={name:"typescript/chapter11/cancel.md"};function o(c,s,r,t,A,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="请求取消模块单元测试" tabindex="-1">请求取消模块单元测试 <a class="header-anchor" href="#请求取消模块单元测试" aria-label="Permalink to &quot;请求取消模块单元测试&quot;">​</a></h1><p>请求取消模块是 <code>ts-axios</code> 库核心流程其中一个分支，也是非常重要的模块，我们将从基础库和业务流程模块 2 个方面去编写单元测试。</p><h2 id="cancel-类单元测试" tabindex="-1">Cancel 类单元测试 <a class="header-anchor" href="#cancel-类单元测试" aria-label="Permalink to &quot;Cancel 类单元测试&quot;">​</a></h2><p><code>cancel/Cancel.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> Cancel, { isCancel } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../../src/cancel/Cancel&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;cancel:Cancel&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should returns correct result when message is specified&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> cancel </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Cancel</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">(cancel</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should returns true if value is a Cancel&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">isCancel</span><span style="color:#D3C6AA;">(</span><span style="color:#E67E80;">new</span><span style="color:#A7C080;"> Cancel</span><span style="color:#D3C6AA;">()))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeTruthy</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should returns false if value is not a Cancel&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">(</span><span style="color:#A7C080;">isCancel</span><span style="color:#D3C6AA;">({ foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span><span style="color:#D3C6AA;"> }))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeFalsy</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="canceltoken-类单元测试" tabindex="-1">CancelToken 类单元测试 <a class="header-anchor" href="#canceltoken-类单元测试" aria-label="Permalink to &quot;CancelToken 类单元测试&quot;">​</a></h2><p><code>cancel/CancelToken.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> CancelToken </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../../src/cancel/CancelToken&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> Cancel </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../../src/cancel/Cancel&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { Canceler } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../../src/types&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;CancelToken&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;reason&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should returns a Cancel if cancellation has been requested&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      let</span><span style="color:#D3C6AA;"> cancel</span><span style="color:#859289;">:</span><span style="color:#83C092;"> Canceler</span></span>
<span class="line"><span style="color:#E69875;">      let</span><span style="color:#D3C6AA;"> token </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> CancelToken</span><span style="color:#D3C6AA;">(c </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        cancel </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> c</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#A7C080;">      cancel</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(Cancel))</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason</span><span style="color:#E69875;">!</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should has no side effect if call cancellation for multi times&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      let</span><span style="color:#D3C6AA;"> cancel</span><span style="color:#859289;">:</span><span style="color:#83C092;"> Canceler</span></span>
<span class="line"><span style="color:#E69875;">      let</span><span style="color:#D3C6AA;"> token </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> CancelToken</span><span style="color:#D3C6AA;">(c </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        cancel </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> c</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#A7C080;">      cancel</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">      cancel</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(Cancel))</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason</span><span style="color:#E69875;">!</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should returns undefined if cancellation has not been requested&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> token </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> CancelToken</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // do nothing</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeUndefined</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;promise&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should returns a Promise that resolves when cancellation is requested&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      let</span><span style="color:#D3C6AA;"> cancel</span><span style="color:#859289;">:</span><span style="color:#83C092;"> Canceler</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> token </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> CancelToken</span><span style="color:#D3C6AA;">(c </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        cancel </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> c</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">      token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">promise</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(value </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">        expect</span><span style="color:#D3C6AA;">(value)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(Cancel))</span></span>
<span class="line"><span style="color:#A7C080;">        expect</span><span style="color:#D3C6AA;">(value</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">        done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#A7C080;">      cancel</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;throwIfRequested&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should throws if cancellation has been requested&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      let</span><span style="color:#D3C6AA;"> cancel</span><span style="color:#859289;">:</span><span style="color:#83C092;"> Canceler</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> token </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> CancelToken</span><span style="color:#D3C6AA;">(c </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        cancel </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> c</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#A7C080;">      cancel</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#E67E80;">      try</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        token</span><span style="color:#859289;">.</span><span style="color:#A7C080;">throwIfRequested</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">        fail</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Expected throwIfRequested to throw.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">      } </span><span style="color:#E67E80;">catch</span><span style="color:#D3C6AA;"> (thrown) {</span></span>
<span class="line"><span style="color:#E67E80;">        if</span><span style="color:#D3C6AA;"> (</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">(thrown </span><span style="color:#E67E80;">instanceof</span><span style="color:#83C092;"> Cancel</span><span style="color:#D3C6AA;">)) {</span></span>
<span class="line"><span style="color:#A7C080;">          fail</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Expected throwIfRequested to throw a Cancel, but test threw &#39;</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> thrown </span><span style="color:#E69875;">+</span><span style="color:#DBBC7F;"> &#39;.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#A7C080;">        expect</span><span style="color:#D3C6AA;">(thrown</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should does not throw if cancellation has not been requested&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> token </span><span style="color:#E69875;">=</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> CancelToken</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">        // do nothing</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">      token</span><span style="color:#859289;">.</span><span style="color:#A7C080;">throwIfRequested</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;source&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should returns an object containing token and cancel function&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> source </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> CancelToken</span><span style="color:#859289;">.</span><span style="color:#A7C080;">source</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(CancelToken))</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">cancel)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(Function))</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeUndefined</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      source</span><span style="color:#859289;">.</span><span style="color:#A7C080;">cancel</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(Cancel))</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">reason</span><span style="color:#E69875;">!</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br></div></div><p>注意，这里我们使用了 <code>fail</code> 函数表示一个测试的失败，这个并未在 Jest 文档中体现，但它是一个可以用的 API。</p><h2 id="cancel-业务逻辑单元测试" tabindex="-1">Cancel 业务逻辑单元测试 <a class="header-anchor" href="#cancel-业务逻辑单元测试" aria-label="Permalink to &quot;Cancel 业务逻辑单元测试&quot;">​</a></h2><p><code>cancel.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/index&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { getAjaxRequest } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;./helper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;cancel&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> CancelToken </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">CancelToken</span></span>
<span class="line"><span style="color:#E69875;">  const</span><span style="color:#D3C6AA;"> Cancel </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Cancel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  beforeEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">install</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  afterEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">uninstall</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;when called before sending request&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should rejects Promise with a Cancel object&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> source </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> CancelToken</span><span style="color:#859289;">.</span><span style="color:#A7C080;">source</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      source</span><span style="color:#859289;">.</span><span style="color:#A7C080;">cancel</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">      return</span><span style="color:#D3C6AA;"> axios</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">          cancelToken</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">catch</span><span style="color:#D3C6AA;">(reason </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">          expect</span><span style="color:#D3C6AA;">(reason)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(Cancel))</span></span>
<span class="line"><span style="color:#A7C080;">          expect</span><span style="color:#D3C6AA;">(reason</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;when called after request has been sent&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should rejects Promise with a Cancel object&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> source </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> CancelToken</span><span style="color:#859289;">.</span><span style="color:#A7C080;">source</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      axios</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo/bar&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">          cancelToken</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">catch</span><span style="color:#D3C6AA;">(reason </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">          expect</span><span style="color:#D3C6AA;">(reason)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(expect</span><span style="color:#859289;">.</span><span style="color:#A7C080;">any</span><span style="color:#D3C6AA;">(Cancel))</span></span>
<span class="line"><span style="color:#A7C080;">          expect</span><span style="color:#D3C6AA;">(reason</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">          done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">      getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        source</span><span style="color:#859289;">.</span><span style="color:#A7C080;">cancel</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Operation has been canceled.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">        setTimeout</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">respondWith</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">            status</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 200</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">            responseText</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;OK&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">          })</span></span>
<span class="line"><span style="color:#D3C6AA;">        }, </span><span style="color:#D699B6;">100</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;calls abort on request object&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> source </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> CancelToken</span><span style="color:#859289;">.</span><span style="color:#A7C080;">source</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#E69875;">      let</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> any</span></span>
<span class="line"><span style="color:#D3C6AA;">      axios</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo/bar&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">          cancelToken</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">catch</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">          expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">statusText)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;abort&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">          done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">      getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(req </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        source</span><span style="color:#859289;">.</span><span style="color:#A7C080;">cancel</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">        request </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> req</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;when called after response has been received&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should not cause unhandled rejection&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">      const</span><span style="color:#D3C6AA;"> source </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> CancelToken</span><span style="color:#859289;">.</span><span style="color:#A7C080;">source</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      axios</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">          cancelToken</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> source</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">token</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#859289;">        .</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          window</span><span style="color:#859289;">.</span><span style="color:#A7C080;">addEventListener</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;unhandledrejection&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">            done</span><span style="color:#859289;">.</span><span style="color:#A7C080;">fail</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Unhandled rejection.&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">          })</span></span>
<span class="line"><span style="color:#D3C6AA;">          source</span><span style="color:#859289;">.</span><span style="color:#A7C080;">cancel</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">          setTimeout</span><span style="color:#D3C6AA;">(done, </span><span style="color:#D699B6;">100</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">      getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">respondWith</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">          status</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 200</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">          responseText</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;OK&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br></div></div><p>注意这里我们使用了 <code>done.fail</code> 表示了一个异常的结束，这个并未在 Jest 文档中体现，但它是一个可以用的 API。</p><p>至此，我们完成了取消模块相关业务逻辑的单元测试，我们测试覆盖率达到了阈值，测试已经通过了。但是扔未达到我们的目标，还有很多 feature 是没有覆盖到的。接下来我们就完成剩余 feature 的编写单元测试。</p>`,14)]))}const b=n(e,[["render",o]]);export{i as __pageData,b as default};
