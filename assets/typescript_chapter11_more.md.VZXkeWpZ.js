import{_ as n,c as a,o as p,ag as l}from"./chunks/framework.D-6U7MZ9.js";const C=JSON.parse('{"title":"剩余模块单元测试","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/chapter11/more.md","filePath":"typescript/chapter11/more.md","lastUpdated":1578475296000}'),e={name:"typescript/chapter11/more.md"};function o(r,s,c,t,A,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="剩余模块单元测试" tabindex="-1">剩余模块单元测试 <a class="header-anchor" href="#剩余模块单元测试" aria-label="Permalink to &quot;剩余模块单元测试&quot;">​</a></h1><h2 id="defaults-模块单元测试" tabindex="-1">defaults 模块单元测试 <a class="header-anchor" href="#defaults-模块单元测试" aria-label="Permalink to &quot;defaults 模块单元测试&quot;">​</a></h2><p><code>defaults</code> 模块为请求配置提供了一些默认的属性和方法，我们需要为其编写单元测试。</p><p><code>test/defaults.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios, { AxiosTransformer } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/index&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { getAjaxRequest } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;./helper&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { deepMerge } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/helpers/util&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;defaults&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  beforeEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">install</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  afterEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">uninstall</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should transform request json&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">((axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">transformRequest </span><span style="color:#E67E80;">as</span><span style="color:#83C092;"> AxiosTransformer</span><span style="color:#D3C6AA;">[])[</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">]({ foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span><span style="color:#D3C6AA;"> }))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;{&quot;foo&quot;:&quot;bar&quot;}&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should do nothing to request string&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">((axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">transformRequest </span><span style="color:#E67E80;">as</span><span style="color:#83C092;"> AxiosTransformer</span><span style="color:#D3C6AA;">[])[</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">](</span><span style="color:#DBBC7F;">&#39;foo=bar&#39;</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;foo=bar&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should transform response json&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> data </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> (axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">transformResponse </span><span style="color:#E67E80;">as</span><span style="color:#83C092;"> AxiosTransformer</span><span style="color:#D3C6AA;">[])[</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">](</span><span style="color:#DBBC7F;">&#39;{&quot;foo&quot;:&quot;bar&quot;}&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">(</span><span style="color:#E67E80;">typeof</span><span style="color:#D3C6AA;"> data)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;object&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">(data</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">foo)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;bar&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should do nothing to response string&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    expect</span><span style="color:#D3C6AA;">((axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">transformResponse </span><span style="color:#E67E80;">as</span><span style="color:#83C092;"> AxiosTransformer</span><span style="color:#D3C6AA;">[])[</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">](</span><span style="color:#DBBC7F;">&#39;foo=bar&#39;</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;foo=bar&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should use global defaults config&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">url)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should use modified defaults config&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">baseURL </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;http://example.com/&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">url)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;http://example.com/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#E67E80;">      delete</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">baseURL</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should use request config&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">      baseURL</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;http://www.example.com&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">url)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;http://www.example.com/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should use default config for custom instance&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      xsrfCookieName</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;CUSTOM-XSRF-TOKEN&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">      xsrfHeaderName</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;X-CUSTOM-XSRF-TOKEN&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">    document</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">cookie </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfCookieName </span><span style="color:#E69875;">+</span><span style="color:#DBBC7F;"> &#39;=foobarbaz&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfHeaderName</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;foobarbaz&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">      document</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">cookie </span><span style="color:#E69875;">=</span></span>
<span class="line"><span style="color:#D3C6AA;">        instance</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfCookieName </span><span style="color:#E69875;">+</span></span>
<span class="line"><span style="color:#DBBC7F;">        &#39;=;expires=&#39;</span><span style="color:#E69875;"> +</span></span>
<span class="line"><span style="color:#E67E80;">        new</span><span style="color:#A7C080;"> Date</span><span style="color:#D3C6AA;">(Date</span><span style="color:#859289;">.</span><span style="color:#A7C080;">now</span><span style="color:#D3C6AA;">() </span><span style="color:#E69875;">-</span><span style="color:#D699B6;"> 86400000</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toUTCString</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should use GET headers&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">headers</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">get[</span><span style="color:#DBBC7F;">&#39;X-CUSTOM-HEADER&#39;</span><span style="color:#D3C6AA;">] </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;foo&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[</span><span style="color:#DBBC7F;">&#39;X-CUSTOM-HEADER&#39;</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#E67E80;">      delete</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">headers</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">get[</span><span style="color:#DBBC7F;">&#39;X-CUSTOM-HEADER&#39;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should use POST headers&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">headers</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">post[</span><span style="color:#DBBC7F;">&#39;X-CUSTOM-HEADER&#39;</span><span style="color:#D3C6AA;">] </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;foo&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[</span><span style="color:#DBBC7F;">&#39;X-CUSTOM-HEADER&#39;</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#E67E80;">      delete</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">headers</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">post[</span><span style="color:#DBBC7F;">&#39;X-CUSTOM-HEADER&#39;</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should use header config&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      headers</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        common</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;X-COMMON-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;commonHeaderValue&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">        },</span></span>
<span class="line"><span style="color:#D3C6AA;">        get</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;X-GET-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;getHeaderValue&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">        },</span></span>
<span class="line"><span style="color:#D3C6AA;">        post</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;X-POST-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;postHeaderValue&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">        }</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">      headers</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#DBBC7F;">        &#39;X-FOO-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;fooHeaderValue&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#DBBC7F;">        &#39;X-BAR-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;barHeaderValue&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#A7C080;">        deepMerge</span><span style="color:#D3C6AA;">(axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">headers</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">common, axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">headers</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">get, {</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;X-COMMON-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;commonHeaderValue&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;X-GET-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;getHeaderValue&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;X-FOO-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;fooHeaderValue&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;X-BAR-HEADER&#39;</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;barHeaderValue&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#D3C6AA;">      )</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should be used by custom instance if set before instance created&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">baseURL </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;http://example.org/&#39;</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">url)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;http://example.org/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#E67E80;">      delete</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">baseURL</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should not be used by custom instance if set after instance created&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">baseURL </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;http://example.org/&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">url)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br></div></div><h2 id="transform-模块单元测试" tabindex="-1">transform 模块单元测试 <a class="header-anchor" href="#transform-模块单元测试" aria-label="Permalink to &quot;transform 模块单元测试&quot;">​</a></h2><p><code>transform</code> 模块用来定义请求和响应的转换方法，我们需要为其编写单元测试。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios, { AxiosResponse, AxiosTransformer } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/index&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { getAjaxRequest } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;./helper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;transform&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  beforeEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">install</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  afterEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">uninstall</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should transform JSON to string&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> data </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">params)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;{&quot;foo&quot;:&quot;bar&quot;}&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should transform string to JSON&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> response</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosResponse</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(res </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      response </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> res</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">respondWith</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">        status</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 200</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        responseText</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;{&quot;foo&quot;: &quot;bar&quot;}&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">      setTimeout</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">        expect</span><span style="color:#D3C6AA;">(</span><span style="color:#E67E80;">typeof</span><span style="color:#D3C6AA;"> response</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;object&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">        expect</span><span style="color:#D3C6AA;">(response</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">foo)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;bar&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">        done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      }, </span><span style="color:#D699B6;">100</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should override default transform&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> data </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, data, {</span></span>
<span class="line"><span style="color:#A7C080;">      transformRequest</span><span style="color:#D3C6AA;">(data) {</span></span>
<span class="line"><span style="color:#E67E80;">        return</span><span style="color:#D3C6AA;"> data</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">params)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">({ foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span><span style="color:#D3C6AA;"> })</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should allow an Array of transformers&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> data </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      foo</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;bar&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, data, {</span></span>
<span class="line"><span style="color:#D3C6AA;">      transformRequest</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> (axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">transformRequest </span><span style="color:#E67E80;">as</span><span style="color:#83C092;"> AxiosTransformer</span><span style="color:#D3C6AA;">[])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">concat</span><span style="color:#D3C6AA;">(</span><span style="color:#E67E80;">function</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#D3C6AA;">        data</span></span>
<span class="line"><span style="color:#D3C6AA;">      )</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        return</span><span style="color:#D3C6AA;"> data</span><span style="color:#859289;">.</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;bar&#39;</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;baz&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">params)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;{&quot;foo&quot;:&quot;baz&quot;}&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should allowing mutating headers&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> token </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> Math</span><span style="color:#859289;">.</span><span style="color:#A7C080;">floor</span><span style="color:#D3C6AA;">(Math</span><span style="color:#859289;">.</span><span style="color:#A7C080;">random</span><span style="color:#D3C6AA;">() </span><span style="color:#E69875;">*</span><span style="color:#D3C6AA;"> Math</span><span style="color:#859289;">.</span><span style="color:#A7C080;">pow</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">2</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">64</span><span style="color:#D3C6AA;">))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toString</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">36</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#A7C080;">      transformRequest</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> (data, headers) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        headers[</span><span style="color:#DBBC7F;">&#39;X-Authorization&#39;</span><span style="color:#D3C6AA;">] </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> token</span></span>
<span class="line"><span style="color:#E67E80;">        return</span><span style="color:#D3C6AA;"> data</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[</span><span style="color:#DBBC7F;">&#39;X-Authorization&#39;</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toEqual</span><span style="color:#D3C6AA;">(token)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br></div></div><h2 id="xsrf-模块单元测试" tabindex="-1">xsrf 模块单元测试 <a class="header-anchor" href="#xsrf-模块单元测试" aria-label="Permalink to &quot;xsrf 模块单元测试&quot;">​</a></h2><p><code>xsrf</code> 模块提供了一套防御 <code>xsrf</code> 攻击的解决方案，我们需要为其编写单元测试。</p><p><code>test/xsrf.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/index&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { getAjaxRequest } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;./helper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;xsrf&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  beforeEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">install</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  afterEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">uninstall</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    document</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">cookie </span><span style="color:#E69875;">=</span></span>
<span class="line"><span style="color:#D3C6AA;">      axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfCookieName </span><span style="color:#E69875;">+</span><span style="color:#DBBC7F;"> &#39;=;expires=&#39;</span><span style="color:#E69875;"> +</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Date</span><span style="color:#D3C6AA;">(Date</span><span style="color:#859289;">.</span><span style="color:#A7C080;">now</span><span style="color:#D3C6AA;">() </span><span style="color:#E69875;">-</span><span style="color:#D699B6;"> 86400000</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toUTCString</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should not set xsrf header if cookie is null&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfHeaderName</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeUndefined</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should set xsrf header if cookie is set&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    document</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">cookie </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfCookieName </span><span style="color:#E69875;">+</span><span style="color:#DBBC7F;"> &#39;=12345&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfHeaderName</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;12345&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should not set xsrf header for cross origin&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    document</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">cookie </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfCookieName </span><span style="color:#E69875;">+</span><span style="color:#DBBC7F;"> &#39;=12345&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;http://example.com/&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfHeaderName</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeUndefined</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should set xsrf header for cross origin when using withCredentials&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    document</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">cookie </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfCookieName </span><span style="color:#E69875;">+</span><span style="color:#DBBC7F;"> &#39;=12345&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;http://example.com/&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">      withCredentials</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> true</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[axios</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">defaults</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">xsrfHeaderName</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;12345&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>注意在 <code>afterEach</code> 函数中我们清空了 <code>xsrf</code> 相关的 cookie。</p><h2 id="上传下载模块单元测试" tabindex="-1">上传下载模块单元测试 <a class="header-anchor" href="#上传下载模块单元测试" aria-label="Permalink to &quot;上传下载模块单元测试&quot;">​</a></h2><p>上传下载模块允许我们监听上传和下载的进度，我们需要为其编写单元测试。</p><p><code>test/progress.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/index&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { getAjaxRequest } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;./helper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;progress&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  beforeEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">install</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  afterEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">uninstall</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should add a download progress handler&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> progressSpy </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> jest</span><span style="color:#859289;">.</span><span style="color:#A7C080;">fn</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, { onDownloadProgress</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> progressSpy })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">respondWith</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">        status</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 200</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        responseText</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;{&quot;foo&quot;: &quot;bar&quot;}&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(progressSpy)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toHaveBeenCalled</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should add a upload progress handler&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> progressSpy </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> jest</span><span style="color:#859289;">.</span><span style="color:#A7C080;">fn</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, { onUploadProgress</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> progressSpy })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // Jasmine AJAX doesn&#39;t trigger upload events.Waiting for jest-ajax fix</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // expect(progressSpy).toHaveBeenCalled()</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>注意，由于 <code>jasmine-ajax</code> 插件不会派发 <code>upload</code> 事件，这个未来可以通过我们自己编写的 <code>jest-ajax</code> 插件来解决，目前不写断言的情况它会直接通过。</p><h2 id="http-授权模块单元测试" tabindex="-1">HTTP 授权模块单元测试 <a class="header-anchor" href="#http-授权模块单元测试" aria-label="Permalink to &quot;HTTP 授权模块单元测试&quot;">​</a></h2><p>HTTP 授权模块为我们在请求头中添加 <code>Authorization</code> 字段，我们需要为其编写单元测试。</p><p><code>test/auth.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/index&#39;</span></span>
<span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> { getAjaxRequest } </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;./helper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;auth&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  beforeEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">install</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  afterEach</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    jasmine</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">Ajax</span><span style="color:#859289;">.</span><span style="color:#A7C080;">uninstall</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should accept HTTP Basic auth with username/password&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">    axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">      auth</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        username</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;Aladdin&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        password</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;open sesame&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">requestHeaders[</span><span style="color:#DBBC7F;">&#39;Authorization&#39;</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should fail to encode HTTP Basic auth credentials with non-Latin1 characters&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#A7C080;"> axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">      auth</span><span style="color:#859289;">:</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        username</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;Aladßç£☃din&#39;</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#D3C6AA;">        password</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;open sesame&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">      }</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"><span style="color:#859289;">      .</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">        throw</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Error</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#DBBC7F;">          &#39;Should not succeed to make a HTTP Basic auth request with non-latin1 chars in credentials.&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">        )</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#859289;">      .</span><span style="color:#A7C080;">catch</span><span style="color:#D3C6AA;">(error </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">        expect</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/character/</span><span style="color:#E67E80;">i</span><span style="color:#859289;">.</span><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(error</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">message))</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeTruthy</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="静态方法模块单元测试" tabindex="-1">静态方法模块单元测试 <a class="header-anchor" href="#静态方法模块单元测试" aria-label="Permalink to &quot;静态方法模块单元测试&quot;">​</a></h2><p>静态方法模块为 <code>axios</code> 对象添加了 2 个静态方法，我们需要为其编写单元测试。</p><p><code>test/static.spec.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">import</span><span style="color:#D3C6AA;"> axios </span><span style="color:#E67E80;">from</span><span style="color:#DBBC7F;"> &#39;../src/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">describe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;promise&#39;</span><span style="color:#D3C6AA;">, () </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should support all&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> fulfilled </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">all</span><span style="color:#D3C6AA;">([</span><span style="color:#D699B6;">true</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">false</span><span style="color:#D3C6AA;">])</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(arg </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      fulfilled </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> arg[</span><span style="color:#D699B6;">0</span><span style="color:#D3C6AA;">]</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    setTimeout</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(fulfilled)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeTruthy</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">      done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    }, </span><span style="color:#D699B6;">100</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should support spread&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> sum </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> 0</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> fulfilled </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> false</span></span>
<span class="line"><span style="color:#E69875;">    let</span><span style="color:#D3C6AA;"> result</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> any</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">    axios</span></span>
<span class="line"><span style="color:#859289;">      .</span><span style="color:#A7C080;">all</span><span style="color:#D3C6AA;">([</span><span style="color:#D699B6;">123</span><span style="color:#D3C6AA;">, </span><span style="color:#D699B6;">456</span><span style="color:#D3C6AA;">])</span></span>
<span class="line"><span style="color:#859289;">      .</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(</span></span>
<span class="line"><span style="color:#D3C6AA;">        axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">spread</span><span style="color:#D3C6AA;">((a, b) </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">          sum </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> a </span><span style="color:#E69875;">+</span><span style="color:#D3C6AA;"> b</span></span>
<span class="line"><span style="color:#D3C6AA;">          fulfilled </span><span style="color:#E69875;">=</span><span style="color:#D699B6;"> true</span></span>
<span class="line"><span style="color:#E67E80;">          return</span><span style="color:#DBBC7F;"> &#39;hello world&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">        })</span></span>
<span class="line"><span style="color:#D3C6AA;">      )</span></span>
<span class="line"><span style="color:#859289;">      .</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(res </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">        result </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> res</span></span>
<span class="line"><span style="color:#D3C6AA;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    setTimeout</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(fulfilled)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBeTruthy</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(sum)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">123</span><span style="color:#E69875;"> +</span><span style="color:#D699B6;"> 456</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(result)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;hello world&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">      done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    }, </span><span style="color:#D699B6;">100</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="补充未覆盖的代码测试" tabindex="-1">补充未覆盖的代码测试 <a class="header-anchor" href="#补充未覆盖的代码测试" aria-label="Permalink to &quot;补充未覆盖的代码测试&quot;">​</a></h2><p>我们发现，跑完测试后，仍有一些代码没有覆盖到测试，其中 <code>core/xhr.ts</code> 文件的第 43 行：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E67E80;">if</span><span style="color:#D3C6AA;"> (responseType) {</span></span>
<span class="line"><span style="color:#D3C6AA;">  request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">responseType </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> responseType</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>我们并未在测试中设置过 <code>responseType</code>，因此我们在 <code>test/requests.spect.ts</code> 文件中补充相关测试：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;should support array buffer response&#39;</span><span style="color:#D3C6AA;">, done </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  let</span><span style="color:#D3C6AA;"> response</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosResponse</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E67E80;">  function</span><span style="color:#A7C080;"> str2ab</span><span style="color:#D3C6AA;">(str</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> buff</span><span style="color:#E69875;"> =</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> ArrayBuffer</span><span style="color:#D3C6AA;">(str</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">length</span><span style="color:#E69875;"> *</span><span style="color:#D699B6;"> 2</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#E69875;">    const</span><span style="color:#D3C6AA;"> view</span><span style="color:#E69875;"> =</span><span style="color:#E67E80;"> new</span><span style="color:#A7C080;"> Uint16Array</span><span style="color:#D3C6AA;">(buff)</span></span>
<span class="line"><span style="color:#E67E80;">    for</span><span style="color:#D3C6AA;"> (</span><span style="color:#E69875;">let</span><span style="color:#D3C6AA;"> i</span><span style="color:#E69875;"> =</span><span style="color:#D699B6;"> 0</span><span style="color:#D3C6AA;">;</span><span style="color:#D3C6AA;"> i</span><span style="color:#E69875;"> &lt;</span><span style="color:#D3C6AA;"> str</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">length;</span><span style="color:#D3C6AA;"> i</span><span style="color:#E69875;">++</span><span style="color:#D3C6AA;">)</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">      view[i]</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> str</span><span style="color:#859289;">.</span><span style="color:#A7C080;">charCodeAt</span><span style="color:#D3C6AA;">(i)</span></span>
<span class="line"><span style="color:#D3C6AA;">    }</span></span>
<span class="line"><span style="color:#E67E80;">    return</span><span style="color:#D3C6AA;"> buff</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  axios</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/foo&#39;</span><span style="color:#D3C6AA;">, {</span></span>
<span class="line"><span style="color:#D3C6AA;">    responseType</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;arraybuffer&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(data </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    response </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> data</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">  getAjaxRequest</span><span style="color:#D3C6AA;">()</span><span style="color:#859289;">.</span><span style="color:#A7C080;">then</span><span style="color:#D3C6AA;">(request </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    request</span><span style="color:#859289;">.</span><span style="color:#A7C080;">respondWith</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">      status</span><span style="color:#859289;">:</span><span style="color:#D699B6;"> 200</span><span style="color:#D3C6AA;">,</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">      // @ts-ignore</span></span>
<span class="line"><span style="color:#D3C6AA;">      response</span><span style="color:#859289;">:</span><span style="color:#A7C080;"> str2ab</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;Hello world&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A7C080;">    setTimeout</span><span style="color:#D3C6AA;">(() </span><span style="color:#E69875;">=&gt;</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#A7C080;">      expect</span><span style="color:#D3C6AA;">(response</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">data</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">byteLength)</span><span style="color:#859289;">.</span><span style="color:#A7C080;">toBe</span><span style="color:#D3C6AA;">(</span><span style="color:#D699B6;">22</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#A7C080;">      done</span><span style="color:#D3C6AA;">()</span></span>
<span class="line"><span style="color:#D3C6AA;">    }, </span><span style="color:#D699B6;">100</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"><span style="color:#D3C6AA;">  })</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>另外我们发现 <code>core/xhr.ts</code> 文件的第 13 行：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D3C6AA;">method </span><span style="color:#E69875;">=</span><span style="color:#DBBC7F;"> &#39;get&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>分支没有测试完全。因为实际上代码执行到这的时候 <code>method</code> 是一定会有的，所以我们不必为其指定默认值，另外还需要在 <code>method!.toUpperCase()</code> 的时候使用非空断言。</p><p>同时<code>core/xhr.ts</code> 文件的第 66 行：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> responseData </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> responseType </span><span style="color:#E69875;">!==</span><span style="color:#DBBC7F;"> &#39;text&#39;</span><span style="color:#E69875;"> ?</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">response </span><span style="color:#E69875;">:</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">responseText</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>分支也没有测试完全。这里我们应该先判断存在 <code>responseType</code> 存在的情况下再去和 <code>text</code> 做对比，需要修改逻辑：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> responseData </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> responseType </span><span style="color:#E69875;">&amp;&amp;</span><span style="color:#D3C6AA;"> responseType </span><span style="color:#E69875;">!==</span><span style="color:#DBBC7F;"> &#39;text&#39;</span><span style="color:#E69875;"> ?</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">response </span><span style="color:#E69875;">:</span><span style="color:#D3C6AA;"> request</span><span style="color:#859289;">.</span><span style="color:#D3C6AA;">responseText</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样再次跑测试，就覆盖了所有的分支。</p><p>到此为止，除了我们之前说的 <code>helpers/error.ts</code> 模块中对于 <code>super</code> 的测试的分支覆盖率没达到 100%，其它模块均达到 100% 的测试覆盖率。</p><p>有些有强迫症的同学可能会觉得，能不能通过某种手段让它的覆盖率达到 100% 呢，这里其实有一个奇技淫巧，在 <code>helpers/error.ts</code> 文件的 <code>constructor</code> 函数上方加一个 <code>/* istanbul ignore next */</code> 注释，这样其实相当于忽略了整个构造函数的测试，这样我们就可以达到 100% 的覆盖率了。</p><p><code>/* istanbul ignore next */</code> 在我们去阅读一些开源代码的时候经常会遇到，主要用途就是用来忽略测试用的，这个技巧不可滥用，除非你明确的知道这段代码不需要测试，否则你不应该使用它。滥用就失去了单元测试的意义了。</p><p>至此，我们就完成了整个 <code>ts-axios</code> 库的测试了，我们也成功地让测试覆盖率达到目标 99% 以上。下一章我会教大家如果打包构建和发布我们的 <code>ts-axios</code> 库。</p>`,43)]))}const D=n(e,[["render",o]]);export{C as __pageData,D as default};
