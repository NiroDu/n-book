import{_ as a,c as n,o as p,ag as l}from"./chunks/framework.D-6U7MZ9.js";const b=JSON.parse('{"title":"baseURL","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/chapter10/baseURL.md","filePath":"typescript/chapter10/baseURL.md","lastUpdated":1562148797000}'),e={name:"typescript/chapter10/baseURL.md"};function o(r,s,c,t,i,y){return p(),n("div",null,s[0]||(s[0]=[l(`<h1 id="baseurl" tabindex="-1">baseURL <a class="header-anchor" href="#baseurl" aria-label="Permalink to &quot;baseURL&quot;">​</a></h1><h2 id="需求分析" tabindex="-1">需求分析 <a class="header-anchor" href="#需求分析" aria-label="Permalink to &quot;需求分析&quot;">​</a></h2><p>有些时候，我们会请求某个域名下的多个接口，我们不希望每次发送请求都填写完整的 url，希望可以配置一个 <code>baseURL</code>，之后都可以传相对路径。如下：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  baseURL</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;https://some-domain.com/api&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/get&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">post</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;/post&#39;</span><span style="color:#D3C6AA;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>我们一旦配置了 <code>baseURL</code>，之后请求传入的 <code>url</code> 都会和我们的 <code>baseURL</code> 拼接成完整的绝对地址，除非请求传入的 <code>url</code> 已经是绝对地址。</p><h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><p>首先修改一下类型定义。</p><p><code>types/index.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> interface</span><span style="color:#83C092;"> AxiosRequestConfig</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#859289;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#D3C6AA;">  baseURL</span><span style="color:#E69875;">?</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>接下来实现 2 个辅助函数。</p><p><code>helpers/url.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> isAbsoluteURL</span><span style="color:#D3C6AA;">(url</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> boolean</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#DBBC7F;"> /</span><span style="color:#E67E80;">^</span><span style="color:#D3C6AA;">([</span><span style="color:#DBBC7F;">a-z</span><span style="color:#D3C6AA;">][</span><span style="color:#DBBC7F;">a-z\\d</span><span style="color:#A7C080;">\\+</span><span style="color:#DBBC7F;">\\-</span><span style="color:#A7C080;">\\.</span><span style="color:#D3C6AA;">]</span><span style="color:#E69875;">*</span><span style="color:#DBBC7F;">:</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;">?</span><span style="color:#A7C080;">\\/\\/</span><span style="color:#DBBC7F;">/</span><span style="color:#E67E80;">i</span><span style="color:#859289;">.</span><span style="color:#A7C080;">test</span><span style="color:#D3C6AA;">(url)</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D699B6;">export</span><span style="color:#E67E80;"> function</span><span style="color:#A7C080;"> combineURL</span><span style="color:#D3C6AA;">(baseURL</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> relativeURL</span><span style="color:#E69875;">?</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#D3C6AA;"> relativeURL</span><span style="color:#E69875;"> ?</span><span style="color:#D3C6AA;"> baseURL</span><span style="color:#859289;">.</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/</span><span style="color:#A7C080;">\\/</span><span style="color:#E69875;">+</span><span style="color:#E67E80;">$</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;&#39;</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;"> +</span><span style="color:#DBBC7F;"> &#39;/&#39;</span><span style="color:#E69875;"> +</span><span style="color:#D3C6AA;"> relativeURL</span><span style="color:#859289;">.</span><span style="color:#A7C080;">replace</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">/</span><span style="color:#E67E80;">^</span><span style="color:#A7C080;">\\/</span><span style="color:#E69875;">+</span><span style="color:#DBBC7F;">/</span><span style="color:#D3C6AA;">,</span><span style="color:#DBBC7F;"> &#39;&#39;</span><span style="color:#D3C6AA;">)</span><span style="color:#E69875;"> :</span><span style="color:#D3C6AA;"> baseURL</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>最后我们来调用这俩个辅助函数。</p><p><code>core/dispatchRequest.ts</code>：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E67E80;">function</span><span style="color:#A7C080;"> transformURL</span><span style="color:#D3C6AA;">(config</span><span style="color:#859289;">:</span><span style="color:#83C092;"> AxiosRequestConfig</span><span style="color:#D3C6AA;">)</span><span style="color:#859289;">:</span><span style="color:#7FBBB3;"> string</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#E69875;">  let</span><span style="color:#D3C6AA;"> {</span><span style="color:#D3C6AA;"> url,</span><span style="color:#D3C6AA;"> params,</span><span style="color:#D3C6AA;"> paramsSerializer,</span><span style="color:#D3C6AA;"> baseURL</span><span style="color:#D3C6AA;"> }</span><span style="color:#E69875;"> =</span><span style="color:#D3C6AA;"> config</span></span>
<span class="line"><span style="color:#E67E80;">  if</span><span style="color:#D3C6AA;"> (baseURL</span><span style="color:#E69875;"> &amp;&amp;</span><span style="color:#E69875;"> !</span><span style="color:#A7C080;">isAbsoluteURL</span><span style="color:#D3C6AA;">(url</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">))</span><span style="color:#D3C6AA;"> {</span></span>
<span class="line"><span style="color:#D3C6AA;">    url</span><span style="color:#E69875;"> =</span><span style="color:#A7C080;"> combineURL</span><span style="color:#D3C6AA;">(baseURL,</span><span style="color:#D3C6AA;"> url)</span></span>
<span class="line"><span style="color:#D3C6AA;">  }</span></span>
<span class="line"><span style="color:#E67E80;">  return</span><span style="color:#A7C080;"> buildURL</span><span style="color:#D3C6AA;">(url</span><span style="color:#E69875;">!</span><span style="color:#D3C6AA;">,</span><span style="color:#D3C6AA;"> params,</span><span style="color:#D3C6AA;"> paramsSerializer)</span></span>
<span class="line"><span style="color:#D3C6AA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="demo-编写" tabindex="-1">demo 编写 <a class="header-anchor" href="#demo-编写" aria-label="Permalink to &quot;demo 编写&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E69875;">const</span><span style="color:#D3C6AA;"> instance </span><span style="color:#E69875;">=</span><span style="color:#D3C6AA;"> axios</span><span style="color:#859289;">.</span><span style="color:#A7C080;">create</span><span style="color:#D3C6AA;">({</span></span>
<span class="line"><span style="color:#D3C6AA;">  baseURL</span><span style="color:#859289;">:</span><span style="color:#DBBC7F;"> &#39;https://img.mukewang.com/&#39;</span></span>
<span class="line"><span style="color:#D3C6AA;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;5cc01a7b0001a33718720632.jpg&#39;</span><span style="color:#D3C6AA;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D3C6AA;">instance</span><span style="color:#859289;">.</span><span style="color:#A7C080;">get</span><span style="color:#D3C6AA;">(</span><span style="color:#DBBC7F;">&#39;https://img.mukewang.com/szimg/5becd5ad0001b89306000338-360-202.jpg&#39;</span><span style="color:#D3C6AA;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这个 demo 非常简单，我们请求了慕课网的 2 张图片，注意当第二个请求 <code>url</code> 已经是绝对地址的时候，我们并不会再去拼接 <code>baseURL</code>。</p><p>至此，<code>ts-axios</code> 就实现了 <code>baseURL</code> 的配置功能，接下来我们来实现 <code>ts-axios</code> 的静态方法扩展。</p>`,19)]))}const d=a(e,[["render",o]]);export{b as __pageData,d as default};
